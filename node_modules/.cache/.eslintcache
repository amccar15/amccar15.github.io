[{"/Users/macuser/Documents/amccar15.github.io/src/index.js":"1","/Users/macuser/Documents/amccar15.github.io/src/App.js":"2","/Users/macuser/Documents/amccar15.github.io/src/reportWebVitals.js":"3","/Users/macuser/Documents/amccar15.github.io/src/firebase-config.js":"4","/Users/macuser/Documents/amccar15.github.io/src/pages/Home.js":"5","/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js":"6","/Users/macuser/Documents/amccar15.github.io/src/pages/Login.js":"7","/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js":"8"},{"size":542,"mtime":1663122707887,"results":"9","hashOfConfig":"10"},{"size":1737,"mtime":1668554077523,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1662742856594,"results":"12","hashOfConfig":"10"},{"size":983,"mtime":1668552023329,"results":"13","hashOfConfig":"10"},{"size":2438,"mtime":1668549050437,"results":"14","hashOfConfig":"10"},{"size":3091,"mtime":1668553803193,"results":"15","hashOfConfig":"10"},{"size":724,"mtime":1662742856593,"results":"16","hashOfConfig":"10"},{"size":1282,"mtime":1668549286100,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"zja76o",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/macuser/Documents/amccar15.github.io/src/index.js",[],[],[],"/Users/macuser/Documents/amccar15.github.io/src/App.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/reportWebVitals.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/firebase-config.js",["47"],[],"import { initializeApp } from \"firebase/app\";\nimport {getAuth, GoogleAuthProvider} from\"firebase/auth\";\nimport {getFirestore} from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATCvyMoGTm3cn-bMOwQj4X9Tl2qujYvh4\",\n  authDomain: \"itis3300blog.firebaseapp.com\",\n  projectId: \"itis3300blog\",\n  storageBucket: \"itis3300blog.appspot.com\",\n  messagingSenderId: \"646791092317\",\n  appId: \"1:646791092317:web:c55489e3f85126ad0ad5b4\",\n  measurementId: \"G-S1TZEXDT1Y\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\n\nexport const auth = getAuth(app);\nexport const providor = new GoogleAuthProvider();\n\nexport const db = getFirestore(app);",[],"/Users/macuser/Documents/amccar15.github.io/src/pages/Home.js",["48","49","50"],[],"import React, { useState, useEffect } from \"react\";\nimport {collection, getDocs, deleteDoc, doc} from 'firebase/firestore';\nimport { auth, db } from '../firebase-config';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, getDownloadURL } from 'firebase/storage';\n\n\nfunction Home({ isAuth }) {\n    const [postLists, setPostList] = useState([]);\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const deletePost = async (id) => {\n        const postDoc = doc(db, \"posts\", id);\n        await deleteDoc(postDoc);\n    }\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const data = await getDocs(postsCollectionRef);\n            setPostList(data.docs.map((doc) => (\n                { ...doc.data(), id: doc.id}\n                )\n            ));\n        };\n        getPosts();\n    }, [deletePost]);\n\n    const storage = getStorage();\n    const starsRef = ref(storage, 'image/image.png');\n\n    return (\n        <div>\n            <div className=\"heroSection\">\n                \n            </div>\n            <div className=\"homePage\">\n                {postLists.map((post) => {\n                    return <div className=\"post\"> \n                                <div className=\"postHeader\">\n                                    <div className=\"title\">\n                                        <h1> {post.title} </h1>\n                                    </div>\n                                    <div className=\"deletePost\">\n                                        {isAuth && post.author.id === auth.currentUser.uid && (\n                                            <button \n                                                onClick={() => {\n                                                    deletePost(post.id);\n                                                }}> X \n                                            </button>\n                                        )}\n                                    </div>\n                                </div>\n                                <button key={post.id}>\n                                    <Link to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                </button>\n                            <div className=\"postTextContainer\"> {post.postText} </div>\n                            <h3>@{post.author.name}</h3>\n                    </div>\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js",["51","52","53","54","55","56","57","58"],[],"/Users/macuser/Documents/amccar15.github.io/src/pages/Login.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js",["59"],[],"import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from '../firebase-config';\nimport { collection, doc, getDoc } from 'firebase/firestore';\n\nfunction ThePost() {\n\n    const { id } = useParams();\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const [docDetails, setDocDetails] = useState([]);\n\n    const [seeAuthor, setAuthor] = useState([]);\n\n    useEffect(() => {\n        const getPost = async (postID) => {\n            const postDoc = doc(postsCollectionRef, postID);\n            const docSnap = await getDoc(postDoc);\n            setDocDetails(docSnap.data());\n    \n            if(docSnap.exists()) {\n                console.log(\"Document data: \", docSnap.data());\n\n                setAuthor(docSnap.data().author.name);\n            } else {\n                console.log(\"Error\");\n            }\n        };\n        getPost(id);\n    }, []);\n    \n    return (\n        <div className=\"thePost\"> \n            <div className=\"postHeader\">\n                <h1> {docDetails.title} </h1>\n            </div>\n            <div className=\"postTextContainer\"> {docDetails.postText} </div>\n                <h3> \n                    @{seeAuthor}\n                </h3>\n            </div>\n    );\n}\n\nexport default ThePost;",{"ruleId":"60","severity":1,"message":"61","line":22,"column":7,"nodeType":"62","messageId":"63","endLine":22,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":5,"column":27,"nodeType":"62","messageId":"63","endLine":5,"endColumn":41},{"ruleId":"65","severity":1,"message":"66","line":27,"column":8,"nodeType":"67","endLine":27,"endColumn":20,"suggestions":"68"},{"ruleId":"60","severity":1,"message":"69","line":30,"column":11,"nodeType":"62","messageId":"63","endLine":30,"endColumn":19},{"ruleId":"60","severity":1,"message":"70","line":6,"column":10,"nodeType":"62","messageId":"63","endLine":6,"endColumn":22},{"ruleId":"60","severity":1,"message":"71","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":19},{"ruleId":"60","severity":1,"message":"72","line":9,"column":10,"nodeType":"62","messageId":"63","endLine":9,"endColumn":24},{"ruleId":"60","severity":1,"message":"73","line":9,"column":26,"nodeType":"62","messageId":"63","endLine":9,"endColumn":38},{"ruleId":"60","severity":1,"message":"74","line":9,"column":40,"nodeType":"62","messageId":"63","endLine":9,"endColumn":51},{"ruleId":"60","severity":1,"message":"75","line":10,"column":10,"nodeType":"62","messageId":"63","endLine":10,"endColumn":25},{"ruleId":"60","severity":1,"message":"76","line":38,"column":11,"nodeType":"62","messageId":"63","endLine":38,"endColumn":21},{"ruleId":"65","severity":1,"message":"77","line":52,"column":8,"nodeType":"67","endLine":52,"endColumn":10,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"79","line":31,"column":8,"nodeType":"67","endLine":31,"endColumn":10,"suggestions":"80"},"no-unused-vars","'storage' is assigned a value but never used.","Identifier","unusedVar","'getDownloadURL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postsCollectionRef'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'starsRef' is assigned a value but never used.","'ContentState' is defined but never used.","'draftToHtml' is defined but never used.","'convertFromRaw' is defined but never used.","'convertToRaw' is defined but never used.","'EditorState' is defined but never used.","'convertFromHTML' is defined but never used.","'createPost' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isAuth' and 'navigate'. Either include them or remove the dependency array.",["82"],"React Hook useEffect has missing dependencies: 'id' and 'postsCollectionRef'. Either include them or remove the dependency array.",["83"],{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [deletePost, postsCollectionRef]",{"range":"90","text":"91"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"92","text":"93"},"Update the dependencies array to be: [id, postsCollectionRef]",{"range":"94","text":"95"},[832,844],"[deletePost, postsCollectionRef]",[1481,1483],"[isAuth, navigate]",[912,914],"[id, postsCollectionRef]"]