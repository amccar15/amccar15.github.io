[{"/Users/macuser/Documents/amccar15.github.io/src/index.js":"1","/Users/macuser/Documents/amccar15.github.io/src/App.js":"2","/Users/macuser/Documents/amccar15.github.io/src/reportWebVitals.js":"3","/Users/macuser/Documents/amccar15.github.io/src/firebase-config.js":"4","/Users/macuser/Documents/amccar15.github.io/src/pages/Home.js":"5","/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js":"6","/Users/macuser/Documents/amccar15.github.io/src/pages/Login.js":"7","/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js":"8"},{"size":584,"mtime":1662750795403,"results":"9","hashOfConfig":"10"},{"size":1560,"mtime":1662819397911,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1662742856594,"results":"12","hashOfConfig":"10"},{"size":903,"mtime":1662742856591,"results":"13","hashOfConfig":"10"},{"size":2137,"mtime":1662755287989,"results":"14","hashOfConfig":"10"},{"size":1734,"mtime":1662742856593,"results":"15","hashOfConfig":"10"},{"size":724,"mtime":1662742856593,"results":"16","hashOfConfig":"10"},{"size":1595,"mtime":1662742856594,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"bkimku",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},"/Users/macuser/Documents/amccar15.github.io/src/index.js",["48"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/macuser/Documents/amccar15.github.io/src/App.js",["49"],[],"import React, { useState } from 'react';\nimport {BrowserRouter as Router, Routes, Route, Link, BrowserRouter} from \"react-router-dom\";\nimport \"./App.css\";\nimport ThePost from './pages/ThePost';\nimport Home from \"./pages/Home\";\nimport CreatePost from './pages/CreatePost';\nimport Login from \"./pages/Login\";\nimport {signOut} from 'firebase/auth';\nimport { auth } from './firebase-config';\n\nfunction App() {\n\n  const [isAuth, setIsAuth] = useState(localStorage.getItem(\"isAuth\"));\n\n  const signUserOut = () => {\n    signOut(auth)\n      .then(() => {\n        localStorage.clear();\n        setIsAuth(false);\n        window.location.pathname = \"/login\";\n      })\n  }\n\n  return (\n    <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" className=\"navlink\"> Home </Link>\n            </li>\n              {!isAuth ? (\n                <Link to=\"/login\" className=\"navlink\"> Login </Link>\n                ) : (\n                  <>\n                    <li><Link to=\"/createpost\" class=\"navlink\"> Create Post </Link></li>\n                    <li class=\"navlink\" onClick={ signUserOut }> Log Out</li>\n                  </>\n                )\n              }\n          </ul>\n        </nav>\n        <Routes>\n          <Route path='/' element={<Home isAuth={isAuth} />} />\n          <Route path=\"/createpost\" element={<CreatePost isAuth={isAuth} />} />\n          <Route path='/login' element={<Login setIsAuth={setIsAuth} />} />\n          <Route path='/thepost' element={<ThePost />} />\n        </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/macuser/Documents/amccar15.github.io/src/reportWebVitals.js",[],[],[],"/Users/macuser/Documents/amccar15.github.io/src/firebase-config.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/pages/Home.js",["50"],[],"import React, { useState, useEffect } from \"react\";\nimport {collection, getDocs, deleteDoc, doc} from 'firebase/firestore';\nimport { auth, db } from '../firebase-config';\nimport { Link } from 'react-router-dom';\n\n\nfunction Home({ isAuth }) {\n    const [postLists, setPostList] = useState([]);\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const deletePost = async (id) => {\n        const postDoc = doc(db, \"posts\", id);\n        await deleteDoc(postDoc);\n    }\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const data = await getDocs(postsCollectionRef);\n            setPostList(data.docs.map((doc) => (\n                { ...doc.data(), id: doc.id}\n                )\n            ));\n        };\n        getPosts();\n    }, [deletePost]);\n\n    return (\n        <div className=\"homePage\">\n            {postLists.map((post) => {\n                return <div className=\"post\"> \n                    <div className=\"post\">\n                            <div className=\"postHeader\">\n                                <div className=\"title\">\n                                    <h1> {post.title} </h1>\n                                </div>\n                                <div className=\"deletePost\">\n                                    {isAuth && post.author.id === auth.currentUser.uid && (\n                                        <button \n                                            onClick={() => {\n                                                deletePost(post.id);\n                                            }}> X \n                                        </button>\n                                    )}\n                                </div>\n                            </div>\n                        <div className=\"postTextContainer\"> {post.postText} </div>\n                        <h3>@{post.author.name}</h3>\n                        <button>\n                            <Link to={{pathname: \"/thepost\"}} state={{postInfo: post.id}}> View Post</Link>\n                        </button>\n                    </div>\n                </div>\n            })}\n        </div>\n    );\n}\n\nexport default Home;","/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js",["51"],[],"import React, { useState, useEffect } from \"react\";\nimport {addDoc, collection} from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport {useNavigate} from 'react-router-dom';\n\nfunction CreatePost({ isAuth }) {\n\n    const [title, setTitle] = useState(\"\");\n    const [postText, setPostText] = useState(\"\");\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    let navigate = useNavigate();\n\n    const createPost = async () => {\n        await addDoc(postsCollectionRef, {\n            title, \n            postText, \n            author: { name: auth.currentUser.displayName, id: auth.currentUser.uid }\n        });\n        navigate(\"/\");\n    };\n\n    useEffect(() => {\n        if(!isAuth) {\n            navigate(\"login\");\n        }\n    }, []);\n    return (\n        <div className=\"createPostPage\"> \n            <div className=\"cpContainer\">\n                <h1> Create a Post</h1>\n                <div className=\"inputGp\">\n                    <label> Title: </label>\n                    <input placeholder=\"Title...\" \n                        onChange={(event) => {\n                            setTitle(event.target.value)\n                            }\n                        }\n                    />\n                </div>\n                <div className=\"inputGp\">\n                    <label> Post: </label>\n                    <textarea placeholder=\"Post...\"\n                        onChange={(event) => {\n                            setPostText(event.target.value)\n                            }\n                        }\n                    />\n                </div>\n                <button onClick={createPost}> Submit Post</button>\n            </div>\n        </div>\n    );\n}\n\nexport default CreatePost;","/Users/macuser/Documents/amccar15.github.io/src/pages/Login.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js",["52","53"],[],"import { useLocation } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from '../firebase-config';\nimport { collection, doc, getDoc } from 'firebase/firestore';\n\nfunction ThePost() {\n\n    const location = useLocation();\n    const { postInfo } = location.state;\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const [docDetails, setDocDetails] = useState([]);\n\n    const [seeAuthor, setAuthor] = useState([]);\n\n    const [authorID, setAuthorID] = useState([]);\n\n    useEffect(() => {\n        const getPost = async (id) => {\n            const postDoc = doc(postsCollectionRef, id);\n            const docSnap = await getDoc(postDoc);\n            setDocDetails(docSnap.data());\n    \n            if(docSnap.exists()) {\n                console.log(\"Document data: \", docSnap.data());\n\n                setAuthor(docSnap.data().author.name);\n                setAuthorID(docSnap.data().author.name);\n            } else {\n                console.log(\"Error\");\n            }\n        };\n        getPost(postInfo);\n    }, []);\n    \n    return (\n        <div className=\"homePage\">\n            <div className=\"post\"> \n                <div className=\"post\"> \n                    <div className=\"postHeader\">\n                        <h1> {docDetails.title} </h1>\n                    </div>\n                    <div className=\"postTextContainer\"> {docDetails.postText} </div>\n                    <h3> \n                        @{seeAuthor}\n                    </h3>\n                </div>\n            </div>\n        </div>  \n    );\n}\n\nexport default ThePost;",{"ruleId":"54","severity":1,"message":"55","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":2,"column":55,"nodeType":"56","messageId":"57","endLine":2,"endColumn":68},{"ruleId":"59","severity":1,"message":"60","line":26,"column":8,"nodeType":"61","endLine":26,"endColumn":20,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":28,"column":8,"nodeType":"61","endLine":28,"endColumn":10,"suggestions":"64"},{"ruleId":"54","severity":1,"message":"65","line":17,"column":12,"nodeType":"56","messageId":"57","endLine":17,"endColumn":20},{"ruleId":"59","severity":1,"message":"66","line":35,"column":8,"nodeType":"61","endLine":35,"endColumn":10,"suggestions":"67"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postsCollectionRef'. Either include it or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has missing dependencies: 'isAuth' and 'navigate'. Either include them or remove the dependency array.",["69"],"'authorID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postInfo' and 'postsCollectionRef'. Either include them or remove the dependency array.",["70"],{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [deletePost, postsCollectionRef]",{"range":"77","text":"78"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"79","text":"80"},"Update the dependencies array to be: [postInfo, postsCollectionRef]",{"range":"81","text":"82"},[764,776],"[deletePost, postsCollectionRef]",[766,768],"[isAuth, navigate]",[1065,1067],"[postInfo, postsCollectionRef]"]