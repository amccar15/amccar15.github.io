[{"/Users/macuser/Documents/amccar15.github.io/src/index.js":"1","/Users/macuser/Documents/amccar15.github.io/src/App.js":"2","/Users/macuser/Documents/amccar15.github.io/src/reportWebVitals.js":"3","/Users/macuser/Documents/amccar15.github.io/src/firebase-config.js":"4","/Users/macuser/Documents/amccar15.github.io/src/pages/Home.js":"5","/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js":"6","/Users/macuser/Documents/amccar15.github.io/src/pages/Login.js":"7","/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js":"8","/Users/macuser/Documents/amccar15.github.io/src/pages/showSearch.js":"9"},{"size":542,"mtime":1663122707887,"results":"10","hashOfConfig":"11"},{"size":3635,"mtime":1669442125690,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1662742856594,"results":"13","hashOfConfig":"11"},{"size":983,"mtime":1669144794181,"results":"14","hashOfConfig":"11"},{"size":28599,"mtime":1669419942423,"results":"15","hashOfConfig":"11"},{"size":3091,"mtime":1668553803193,"results":"16","hashOfConfig":"11"},{"size":724,"mtime":1662742856593,"results":"17","hashOfConfig":"11"},{"size":4160,"mtime":1669408947159,"results":"18","hashOfConfig":"11"},{"size":1970,"mtime":1669440671972,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"zja76o",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/macuser/Documents/amccar15.github.io/src/index.js",[],[],[],"/Users/macuser/Documents/amccar15.github.io/src/App.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/reportWebVitals.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/firebase-config.js",["53"],[],"import { initializeApp } from \"firebase/app\";\nimport {getAuth, GoogleAuthProvider} from\"firebase/auth\";\nimport {getFirestore} from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATCvyMoGTm3cn-bMOwQj4X9Tl2qujYvh4\",\n  authDomain: \"itis3300blog.firebaseapp.com\",\n  projectId: \"itis3300blog\",\n  storageBucket: \"itis3300blog.appspot.com\",\n  messagingSenderId: \"646791092317\",\n  appId: \"1:646791092317:web:c55489e3f85126ad0ad5b4\",\n  measurementId: \"G-S1TZEXDT1Y\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\n\nexport const auth = getAuth(app);\nexport const providor = new GoogleAuthProvider();\n\nexport const db = getFirestore(app);","/Users/macuser/Documents/amccar15.github.io/src/pages/Home.js",["54","55","56","57","58","59","60","61"],[],"import React, { useState } from \"react\";\nimport {collection, getDocs, deleteDoc, doc, query, where} from 'firebase/firestore';\nimport { auth, db } from '../firebase-config';\nimport { Link } from 'react-router-dom';\n\nfunction Home({ isAuth }) {\n    const [chapter, setChapter] = useState([]);\n\n    const [openSection, setOpenSection] = useState({\n        chapter5: 'false',\n        chapter6: 'false',\n        chapter7: 'false',\n        chapter8: 'false',\n        chapter9: 'false',\n        chapter10: 'false',\n        chapter11: 'false',\n        chapter12: 'false',\n    });\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const deletePost = async (id) => {\n        const postDoc = doc(db, \"posts\", id);\n        await deleteDoc(postDoc);\n    }\n\n    const chapterQuery = async (qOption) => {\n        const q = query(postsCollectionRef, where(\"Chapter\", '==', qOption));\n        const docData = await getDocs(q);\n        setChapter(docData.docs.map((doc) => (\n                {...doc.data(), id: doc.id}\n            )\n        ));\n    }\n\n    return (\n        <div>\n            <div className=\"heroSection\">\n                \n            </div>\n                <div className=\"HomeSections\">\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/Importance-of-project-scope-management.jpeg\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Scope Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"5\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter5: true, \n                                                            chapter6: false, \n                                                            chapter7: false,                                                         \n                                                            chapter8: false, \n                                                            chapter9: false, \n                                                            chapter10: false, \n                                                            chapter11: false, \n                                                            chatper12: false}}) \n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter5: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter5 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/Project-Scheduling-Management.png\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Schedule Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"6\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter5: false, \n                                                            chapter6: true, \n                                                            chapter7: false,                                                         \n                                                            chapter8: false, \n                                                            chapter9: false, \n                                                            chapter10: false, \n                                                            chapter11: false, \n                                                            chatper12: false}}) \n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter6: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter6 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/Project-Cost-Management-Plan.jpg\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Cost Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"7\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter5: false, \n                                                            chapter6: false, \n                                                            chapter7: true,                                                         \n                                                            chapter8: false, \n                                                            chapter9: false, \n                                                            chapter10: false, \n                                                            chapter11: false, \n                                                            chatper12: false}}) \n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter7: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter7 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/Project_Quality_Management.avif\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Quality Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"8\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter5: false, \n                                                            chapter6: false, \n                                                            chapter7: false,                                                         \n                                                            chapter8: true, \n                                                            chapter9: false, \n                                                            chapter10: false, \n                                                            chapter11: false, \n                                                            chatper12: false}}) \n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter8: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter8 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/how-create-present-resource-plan.jpg\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Resource Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"9\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter5: false, \n                                                            chapter6: false, \n                                                            chapter7: false,                                                         \n                                                            chapter8: false, \n                                                            chapter9: true, \n                                                            chapter10: false, \n                                                            chapter11: false, \n                                                            chatper12: false}}) \n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter9: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter9 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/Project-Communication-Management.jpg\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Communications Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"10\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter5: false, \n                                                            chapter6: false, \n                                                            chapter7: false,                                                         \n                                                            chapter8: false, \n                                                            chapter9: false, \n                                                            chapter10: true, \n                                                            chapter11: false, \n                                                            chatper12: false}}) \n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter10: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter10 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/project-risk.jpg\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Risk Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"11\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter5: false, \n                                                            chapter6: false, \n                                                            chapter7: false,                                                         \n                                                            chapter8: false, \n                                                            chapter9: false, \n                                                            chapter10: false, \n                                                            chapter11: true, \n                                                            chatper12: false}}) \n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter11: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter11 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                    <div className=\"HomeSection1\">\n                        <div className=\"sectionGroup\">\n                            <img className=\"topicImg\" src={require(\"../assets/Its-important-to-stay-abreast-of-new-procurement-technologies.jpg\")} alt=\"Scope management photo\"/>\n                            <div className=\"btnGroup\">\n                                <h1>Topics in Project Procurement Management?</h1>\n                                <span className=\"openBtn\" onClick={() => \n                                                    {chapterQuery(\"12\"); \n                                                        setOpenSection(prevState => {return {...prevState, \n                                                            chapter12: true, \n                                                            chapter6: false, \n                                                            chapter7: false,                                                         \n                                                            chapter8: false, \n                                                            chapter9: false, \n                                                            chapter10: false, \n                                                            chapter11: false, \n                                                            chatper5: false,\n                                                        }});\n                                                    }}\n                                >Open Section</span>\n                                <span className=\"openBtn\" onClick={() => setOpenSection(prevState => {return {...prevState, chapter12: false}}) }>Close Section</span>\n                            </div>\n                        </div>\n                        {openSection.chapter12 === true && chapter.map((post) => {\n                            return <div className=\"post\"> \n                                        <hr />\n                                        <div className=\"postHeader\">\n                                            <div className=\"title\">\n                                                <h1> {post.title} </h1>\n                                            </div>\n                                            <div className=\"deletePost\">\n                                                {isAuth && post.author.id === auth.currentUser.uid && (\n                                                    <button \n                                                        onClick={() => {\n                                                            deletePost(post.id);\n                                                        }}> X \n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div> \n                                            <span className=\"openBtn\" key={post.id}>\n                                                <Link className=\"viewPost\" to={{pathname: '/thepost/'+post.id}}> View Post</Link>\n                                            </span>\n                                        </div>\n                                    <div className=\"postTextContainer\"> {post.postText} </div>\n                                    <h3>@{post.author.name}</h3>\n                            </div>              \n                        })}\n                    </div>\n                </div>\n        </div>\n    );\n}\n\nexport default Home;","/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js",["62","63","64","65","66","67","68","69"],[],"import React, { useState, useEffect } from \"react\";\nimport {addDoc, collection} from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport {useNavigate} from 'react-router-dom';\n\nimport { ContentState, Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from 'draftjs-to-html'; \nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { convertFromRaw, convertToRaw, EditorState } from \"draft-js\";\nimport { convertFromHTML, convertToHTML } from \"draft-convert\";\n\nfunction CreatePost({ isAuth }) {\n\n    const [title, setTitle] = useState(\"\");\n\n    //rich text editor state\n    const [editorState, setEditorState] = useState(\n        {\n            message: \"Enter your post here!\",\n            rawMessage: '',\n        },\n    );\n\n    const [postText, setPostText] = useState(\n        {\n            convertMessage: '',\n            messagePost: ''\n        }\n    );\n\n    //firebase collection \n    const postsCollectionRef = collection(db, \"posts\");\n\n    //navigate function to navigate back to root file\n    let navigate = useNavigate();\n\n    //sending data to firebase\n    const createPost = async () => {\n        await addDoc(postsCollectionRef, {\n            title, \n            postText, \n            author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\n        });\n        navigate(\"/\");\n    };\n\n    //checking if user is logged in\n    useEffect(() => {\n        if(!isAuth) {\n            navigate(\"login\");\n        }\n    }, []);\n\n    //converting to raw html\n    const onEditorStateChange = (editorState) => {\n        setEditorState({\n            editorState,\n            rawMessage: convertToHTML(editorState.getCurrentContent())\n        })\n    }\n    \n    //handling the message from rich text editor\n    const handleEditorStateMessage = () => {\n        setEditorState({\n            message: editorState.rawMessage\n        });\n        setPostText({\n            messagePost: postText.convertMessage\n        });\n        console.log(\"editorstate: \", editorState.rawMessage);\n        console.log(\"postText: \", postText.convertMessage);\n    }\n\n    return (\n        <div className=\"createPostPage\"> \n            <div className=\"cpContainer\">\n                <h1> Create a Post</h1>\n                <div className=\"inputGp\">\n                    <label> Title: </label>\n                    <input placeholder=\"Title...\" \n                        onChange={(event) => {\n                            setTitle(event.target.value)\n                            }\n                        }\n                    />\n                </div>\n                <br></br>\n                <Editor \n                    initialEditorState={editorState}\n                    onEditorStateChange={onEditorStateChange}\n                    toolbarClassName=\"toolbarClassName\"\n                    wrapperClassName=\"wrapperClassName\"\n                    editorClassName=\"editorClassName\" \n                />\n                <button onClick={() => {handleEditorStateMessage();}}> Submit Post</button>\n            </div>\n        </div>\n    );\n}\n\nexport default CreatePost;","/Users/macuser/Documents/amccar15.github.io/src/pages/Login.js",[],[],"/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js",["70","71","72"],[],"import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from '../firebase-config';\nimport { collection, doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\n\nfunction ThePost({ isAuth }) {\n\n    const { id } = useParams();\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const [docDetails, setDocDetails] = useState([]);\n\n    const [seeAuthorName, setAuthorName] = useState([]);\n\n    const [seeAuthorID, setAuthorID] = useState([]);\n\n    const [image, setImage] = useState(null);\n\n    const storage = getStorage();\n\n    const onImageChange = (e) => {\n        const reader = new FileReader();\n        let file = e.target.files[0];\n\n        if (file) {\n            reader.onload = () => {\n                if(reader.readyState === 2) {\n                    console.log(file);\n                    setImage(file);\n                }\n            };\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        else {\n            setImage(null);\n        }\n    }\n\n    const uploadPhoto = () => {\n        if(image != null) {\n            const storageRef = ref(storage, \"image/\"+id);\n\n            const uploadTask = uploadBytesResumable(storageRef, image);\n\n            uploadTask.on('state_changed', (snapshot) => {\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log(\"Upload is: \" + progress + \"% done\");\n                switch (snapshot.state) {\n                    case 'paused':\n                        console.log(\"Upload is paused\");\n                        break;\n                    case 'running':\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                alert(\"Image upload failed\");\n                console.log(error);\n            }, () => {\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    console.log('File link at :', downloadURL);\n                    const postDoc = doc(postsCollectionRef, id);\n                    updateDoc(postDoc, {\n                        imageExist: downloadURL,\n                    });\n                    getPost(id);\n                });\n            })\n        }\n    }\n\n    useEffect(() => {\n        getPost(id);\n    }, []);\n\n    const getPost = async (postID) => {\n        const postDoc = doc(postsCollectionRef, postID);\n        const docSnap = await getDoc(postDoc);\n        setDocDetails(docSnap.data());\n\n        if(docSnap.exists()) {\n            setAuthorName(docSnap.data().author.name);                \n            setAuthorID(docSnap.data().author.id);\n        } else {\n            console.log(\"Error\");\n        }        \n    };\n\n    return (\n        <div className=\"thePost\"> \n            <div className=\"postHeader\">\n                {isAuth && seeAuthorID === auth.currentUser.uid && (\n                    <div>\n                        <input type=\"file\" accept=\"image/x-png, image/jpeg\" onChange={(e) => onImageChange(e)}/>\n                        <button onClick={() => uploadPhoto()}>\n                            Add Image\n                        </button>\n                    </div>\n                )}\n                {docDetails.imageExist !== '' && (\n                    <div>\n                        <img className=\"headerImg\" src={docDetails.imageExist} />\n                        <div className=\"postHeadContainer\">\n                            <h1 className=\"postHeadTitle\"> {docDetails.title} </h1>\n                        </div>\n                    </div>\n                )}\n                {docDetails.imageExist === '' && (\n                    <div>\n                        <h1 className=\"noPhotoTitle\">{docDetails.title}</h1>\n                    </div>\n                )}\n            </div>\n            <hr />\n            <div className=\"postTextContainer\"> {docDetails.postText} </div>\n                <h3> \n                    @{seeAuthorName}\n                </h3>\n            </div>\n    );\n}\n\nexport default ThePost;","/Users/macuser/Documents/amccar15.github.io/src/pages/showSearch.js",["73"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {collection, getDocs, query, where} from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { Link } from \"react-router-dom\";\n\nfunction ShowSearch() {\n\n    const {type, search} = useParams();\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const [post, setPost] = useState([]);\n\n    useEffect(() => {\n        if(type === 'title') {\n            const q = query(postsCollectionRef, where(type, '>=', search));\n            getPosts(q);\n        }\n        if(type === 'author') {\n            const q = query(postsCollectionRef, where(type+\".name\", '>=', search));\n            getPosts(q);\n        }\n    }, []);\n\n    const getPosts = async (qSearch) => {\n        const docData = await getDocs(qSearch);\n        setPost(docData.docs.map((doc) => (\n                {...doc.data(), id: doc.id}\n            )\n        ));\n    }\n\n    return(\n        <div>\n            {post !== null && post.map((p) => {\n                return <div className=\"post\" style={{backgroundColor: \"#7B8D8E\", margin: \"1em\", padding: \"1em\", borderRadius: \"1em\"}}> \n                <hr />\n                <div className=\"postHeader\">\n                    <div className=\"title\">\n                        <h1> {p.title} </h1>\n                    </div>\n                </div>\n                <div> \n                    <span className=\"openBtn\" key={p.id}>\n                        <Link className=\"viewPost\" to={{pathname: '/thepost/'+p.id}}> View Post</Link>\n                    </span>\n                </div>\n            <div className=\"postTextContainer\"> {p.postText} </div>\n                <h3>@{p.author.name}</h3>\n            </div>            \n            })}\n            <div>\n                {post && post.length === 0 && (\n                    <h1>No posts where found</h1>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default ShowSearch;",{"ruleId":"74","severity":1,"message":"75","line":22,"column":7,"nodeType":"76","messageId":"77","endLine":22,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":44,"column":29,"nodeType":"80","endLine":44,"endColumn":156},{"ruleId":"78","severity":1,"message":"79","line":92,"column":29,"nodeType":"80","endLine":92,"endColumn":146},{"ruleId":"78","severity":1,"message":"79","line":140,"column":29,"nodeType":"80","endLine":140,"endColumn":145},{"ruleId":"78","severity":1,"message":"79","line":188,"column":29,"nodeType":"80","endLine":188,"endColumn":144},{"ruleId":"78","severity":1,"message":"79","line":236,"column":29,"nodeType":"80","endLine":236,"endColumn":149},{"ruleId":"78","severity":1,"message":"79","line":284,"column":29,"nodeType":"80","endLine":284,"endColumn":149},{"ruleId":"78","severity":1,"message":"79","line":332,"column":29,"nodeType":"80","endLine":332,"endColumn":129},{"ruleId":"78","severity":1,"message":"79","line":380,"column":29,"nodeType":"80","endLine":380,"endColumn":178},{"ruleId":"74","severity":1,"message":"81","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":22},{"ruleId":"74","severity":1,"message":"82","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":19},{"ruleId":"74","severity":1,"message":"83","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":24},{"ruleId":"74","severity":1,"message":"84","line":9,"column":26,"nodeType":"76","messageId":"77","endLine":9,"endColumn":38},{"ruleId":"74","severity":1,"message":"85","line":9,"column":40,"nodeType":"76","messageId":"77","endLine":9,"endColumn":51},{"ruleId":"74","severity":1,"message":"86","line":10,"column":10,"nodeType":"76","messageId":"77","endLine":10,"endColumn":25},{"ruleId":"74","severity":1,"message":"87","line":38,"column":11,"nodeType":"76","messageId":"77","endLine":38,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":52,"column":8,"nodeType":"90","endLine":52,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":50,"column":17,"nodeType":"94","messageId":"95","endLine":57,"endColumn":18},{"ruleId":"88","severity":1,"message":"96","line":76,"column":8,"nodeType":"90","endLine":76,"endColumn":10,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":104,"column":25,"nodeType":"80","endLine":104,"endColumn":82},{"ruleId":"88","severity":1,"message":"100","line":24,"column":8,"nodeType":"90","endLine":24,"endColumn":10,"suggestions":"101"},"no-unused-vars","'storage' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ContentState' is defined but never used.","'draftToHtml' is defined but never used.","'convertFromRaw' is defined but never used.","'convertToRaw' is defined but never used.","'EditorState' is defined but never used.","'convertFromHTML' is defined but never used.","'createPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuth' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["102"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'getPost' and 'id'. Either include them or remove the dependency array.",["103"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'postsCollectionRef', 'search', and 'type'. Either include them or remove the dependency array.",["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"111","text":"112"},"Update the dependencies array to be: [getPost, id]",{"range":"113","text":"114"},"Update the dependencies array to be: [postsCollectionRef, search, type]",{"range":"115","text":"116"},[1481,1483],"[isAuth, navigate]",[2434,2436],"[getPost, id]",[739,741],"[postsCollectionRef, search, type]"]