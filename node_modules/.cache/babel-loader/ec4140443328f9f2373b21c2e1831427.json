{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from '../firebase-config';\nimport { collection, doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThePost(_ref) {\n  _s();\n\n  let {\n    isAuth\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const postsCollectionRef = collection(db, \"posts\");\n  const [docDetails, setDocDetails] = useState([]);\n  const [seeAuthorName, setAuthorName] = useState([]);\n  const [seeAuthorID, setAuthorID] = useState([]);\n  const [image, setImage] = useState(null);\n  const [imageURL, setImageURL] = useState([]);\n  const storage = getStorage();\n\n  const onImageChange = e => {\n    const reader = new FileReader();\n    let file = e.target.files[0];\n\n    if (file) {\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          console.log(file);\n          setImage(file);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    } else {\n      setImage(null);\n    }\n  };\n\n  const uploadPhoto = () => {\n    if (image != null) {\n      const storageRef = ref(storage, 'images/');\n      const uploadTask = uploadBytesResumable(storageRef, image);\n      uploadTask.on('state_changed', snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log(\"Upload is: \" + progress + \"% done\");\n\n        switch (snapshot.state) {\n          case 'paused':\n            console.log(\"Upload is paused\");\n            break;\n\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, error => {\n        alert(\"Image upload failed\");\n        console.log(error);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log('File link at :', downloadURL);\n          setImageURL(downloadURL);\n          updatePost(id);\n\n          const updatePost = async postID => {\n            const postDoc = doc(postsCollectionRef, postID);\n            await updateDoc(postDoc, {\n              imageExist: imageURL\n            });\n          };\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const getPost = async postID => {\n      const postDoc = doc(postsCollectionRef, postID);\n      const docSnap = await getDoc(postDoc);\n      setDocDetails(docSnap.data());\n\n      if (docSnap.exists()) {\n        setAuthorName(docSnap.data().author.name);\n        setAuthorID(docSnap.data().author.id);\n      } else {\n        console.log(\"Error\");\n      }\n    };\n\n    getPost(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thePost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postHeader\",\n      children: [isAuth && seeAuthorID === auth.currentUser.uid && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/x-png, image/jpeg\",\n          onChange: e => onImageChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => uploadPhoto(),\n          children: \"Add Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", docDetails.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postTextContainer\",\n      children: [\" \", docDetails.postText, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"@\", seeAuthorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThePost, \"RImj0YGCwvN6j4+nxN8Um3YJaj8=\", false, function () {\n  return [useParams];\n});\n\n_c = ThePost;\nexport default ThePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThePost\");","map":{"version":3,"names":["useParams","React","useEffect","useState","auth","db","collection","doc","getDoc","updateDoc","getStorage","ref","uploadBytesResumable","getDownloadURL","ThePost","isAuth","id","postsCollectionRef","docDetails","setDocDetails","seeAuthorName","setAuthorName","seeAuthorID","setAuthorID","image","setImage","imageURL","setImageURL","storage","onImageChange","e","reader","FileReader","file","target","files","onload","readyState","console","log","readAsDataURL","uploadPhoto","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","error","alert","then","downloadURL","updatePost","postID","postDoc","imageExist","getPost","docSnap","data","exists","author","name","currentUser","uid","title","postText"],"sources":["/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from '../firebase-config';\nimport { collection, doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\n\nfunction ThePost({ isAuth }) {\n\n    const { id } = useParams();\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const [docDetails, setDocDetails] = useState([]);\n\n    const [seeAuthorName, setAuthorName] = useState([]);\n\n    const [seeAuthorID, setAuthorID] = useState([]);\n\n    const [image, setImage] = useState(null);\n\n    const [imageURL, setImageURL] = useState([]);\n\n    const storage = getStorage();\n\n    const onImageChange = (e) => {\n        const reader = new FileReader();\n        let file = e.target.files[0];\n\n        if (file) {\n            reader.onload = () => {\n                if(reader.readyState === 2) {\n                    console.log(file);\n                    setImage(file);\n                }\n            };\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        else {\n            setImage(null);\n        }\n    }\n\n    const uploadPhoto = () => {\n        if(image != null) {\n            const storageRef = ref(storage, 'images/');\n\n            const uploadTask = uploadBytesResumable(storageRef, image);\n\n            uploadTask.on('state_changed', (snapshot) => {\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log(\"Upload is: \" + progress + \"% done\");\n                switch (snapshot.state) {\n                    case 'paused':\n                        console.log(\"Upload is paused\");\n                        break;\n                    case 'running':\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                alert(\"Image upload failed\");\n                console.log(error);\n            }, () => {\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    console.log('File link at :', downloadURL);\n                    setImageURL(downloadURL);\n\n                    updatePost(id);\n                    const updatePost = async (postID) => {\n                        const postDoc = doc(postsCollectionRef, postID);\n                        await updateDoc(postDoc, {\n                            imageExist: imageURL,\n                        });\n                    }\n                    \n                });\n            })\n        }\n    }\n\n    useEffect(() => {\n        const getPost = async (postID) => {\n            const postDoc = doc(postsCollectionRef, postID);\n            const docSnap = await getDoc(postDoc);\n            setDocDetails(docSnap.data());\n    \n            if(docSnap.exists()) {\n                setAuthorName(docSnap.data().author.name);\n                setAuthorID(docSnap.data().author.id);\n            } else {\n                console.log(\"Error\");\n            }\n        };\n        getPost(id);\n    }, []);\n\n    return (\n        <div className=\"thePost\"> \n            <div className=\"postHeader\">\n                {isAuth && seeAuthorID === auth.currentUser.uid && (\n                    <div>\n                        <input type=\"file\" accept=\"image/x-png, image/jpeg\" onChange={(e) => onImageChange(e)}/>\n                        <button onClick={() => uploadPhoto()}>\n                            Add Image\n                        </button>\n                    </div>\n                )}\n                <h1> {docDetails.title} </h1>\n            </div>\n            <hr />\n            <div className=\"postTextContainer\"> {docDetails.postText} </div>\n                <h3> \n                    @{seeAuthorName}\n                </h3>\n            </div>\n    );\n}\n\nexport default ThePost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}