{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.draftjsToHtml = factory());\n})(this, function () {\n  'use strict';\n  /**\n  * Utility function to execute callback for eack key->value pair.\n  */\n\n  function forEach(obj, callback) {\n    if (obj) {\n      for (var key in obj) {\n        // eslint-disable-line no-restricted-syntax\n        if ({}.hasOwnProperty.call(obj, key)) {\n          callback(key, obj[key]);\n        }\n      }\n    }\n  }\n  /**\n  * The function returns true if the string passed to it has no content.\n  */\n\n\n  function isEmptyString(str) {\n    if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * Mapping block-type to corresponding html tag.\n  */\n\n\n  var blockTypesMapping = {\n    unstyled: 'p',\n    'header-one': 'h1',\n    'header-two': 'h2',\n    'header-three': 'h3',\n    'header-four': 'h4',\n    'header-five': 'h5',\n    'header-six': 'h6',\n    'unordered-list-item': 'ul',\n    'ordered-list-item': 'ol',\n    blockquote: 'blockquote',\n    code: 'pre'\n  };\n  /**\n  * Function will return HTML tag for a block.\n  */\n\n  function getBlockTag(type) {\n    return type && blockTypesMapping[type];\n  }\n  /**\n  * Function will return style string for a block.\n  */\n\n\n  function getBlockStyle(data) {\n    var styles = '';\n    forEach(data, function (key, value) {\n      if (value) {\n        styles += \"\".concat(key, \":\").concat(value, \";\");\n      }\n    });\n    return styles;\n  }\n  /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */\n\n\n  function getHashtagRanges(blockText, hashtagConfig) {\n    var sections = [];\n\n    if (hashtagConfig) {\n      var counter = 0;\n      var startIndex = 0;\n      var text = blockText;\n      var trigger = hashtagConfig.trigger || '#';\n      var separator = hashtagConfig.separator || ' ';\n\n      for (; text.length > 0 && startIndex >= 0;) {\n        if (text[0] === trigger) {\n          startIndex = 0;\n          counter = 0;\n          text = text.substr(trigger.length);\n        } else {\n          startIndex = text.indexOf(separator + trigger);\n\n          if (startIndex >= 0) {\n            text = text.substr(startIndex + (separator + trigger).length);\n            counter += startIndex + separator.length;\n          }\n        }\n\n        if (startIndex >= 0) {\n          var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n          var hashtag = text.substr(0, endIndex);\n\n          if (hashtag && hashtag.length > 0) {\n            sections.push({\n              offset: counter,\n              length: hashtag.length + trigger.length,\n              type: 'HASHTAG'\n            });\n          }\n\n          counter += trigger.length;\n        }\n      }\n    }\n\n    return sections;\n  }\n  /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */\n\n\n  function getSections(block, hashtagConfig) {\n    var sections = [];\n    var lastOffset = 0;\n    var sectionRanges = block.entityRanges.map(function (range) {\n      var offset = range.offset,\n          length = range.length,\n          key = range.key;\n      return {\n        offset: offset,\n        length: length,\n        key: key,\n        type: 'ENTITY'\n      };\n    });\n    sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n    sectionRanges = sectionRanges.sort(function (s1, s2) {\n      return s1.offset - s2.offset;\n    });\n    sectionRanges.forEach(function (r) {\n      if (r.offset > lastOffset) {\n        sections.push({\n          start: lastOffset,\n          end: r.offset\n        });\n      }\n\n      sections.push({\n        start: r.offset,\n        end: r.offset + r.length,\n        entityKey: r.key,\n        type: r.type\n      });\n      lastOffset = r.offset + r.length;\n    });\n\n    if (lastOffset < block.text.length) {\n      sections.push({\n        start: lastOffset,\n        end: block.text.length\n      });\n    }\n\n    return sections;\n  }\n  /**\n  * Function to check if the block is an atomic entity block.\n  */\n\n\n  function isAtomicEntityBlock(block) {\n    if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === 'atomic')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * The function will return array of inline styles applicable to the block.\n  */\n\n\n  function getStyleArrayForBlock(block) {\n    var text = block.text,\n        inlineStyleRanges = block.inlineStyleRanges;\n    var inlineStyles = {\n      BOLD: new Array(text.length),\n      ITALIC: new Array(text.length),\n      UNDERLINE: new Array(text.length),\n      STRIKETHROUGH: new Array(text.length),\n      CODE: new Array(text.length),\n      SUPERSCRIPT: new Array(text.length),\n      SUBSCRIPT: new Array(text.length),\n      COLOR: new Array(text.length),\n      BGCOLOR: new Array(text.length),\n      FONTSIZE: new Array(text.length),\n      FONTFAMILY: new Array(text.length),\n      length: text.length\n    };\n\n    if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n      inlineStyleRanges.forEach(function (range) {\n        var offset = range.offset;\n        var length = offset + range.length;\n\n        for (var i = offset; i < length; i += 1) {\n          if (range.style.indexOf('color-') === 0) {\n            inlineStyles.COLOR[i] = range.style.substring(6);\n          } else if (range.style.indexOf('bgcolor-') === 0) {\n            inlineStyles.BGCOLOR[i] = range.style.substring(8);\n          } else if (range.style.indexOf('fontsize-') === 0) {\n            inlineStyles.FONTSIZE[i] = range.style.substring(9);\n          } else if (range.style.indexOf('fontfamily-') === 0) {\n            inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n          } else if (inlineStyles[range.style]) {\n            inlineStyles[range.style][i] = true;\n          }\n        }\n      });\n    }\n\n    return inlineStyles;\n  }\n  /**\n  * The function will return inline style applicable at some offset within a block.\n  */\n\n\n  function getStylesAtOffset(inlineStyles, offset) {\n    var styles = {};\n\n    if (inlineStyles.COLOR[offset]) {\n      styles.COLOR = inlineStyles.COLOR[offset];\n    }\n\n    if (inlineStyles.BGCOLOR[offset]) {\n      styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n    }\n\n    if (inlineStyles.FONTSIZE[offset]) {\n      styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n    }\n\n    if (inlineStyles.FONTFAMILY[offset]) {\n      styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n    }\n\n    if (inlineStyles.UNDERLINE[offset]) {\n      styles.UNDERLINE = true;\n    }\n\n    if (inlineStyles.ITALIC[offset]) {\n      styles.ITALIC = true;\n    }\n\n    if (inlineStyles.BOLD[offset]) {\n      styles.BOLD = true;\n    }\n\n    if (inlineStyles.STRIKETHROUGH[offset]) {\n      styles.STRIKETHROUGH = true;\n    }\n\n    if (inlineStyles.CODE[offset]) {\n      styles.CODE = true;\n    }\n\n    if (inlineStyles.SUBSCRIPT[offset]) {\n      styles.SUBSCRIPT = true;\n    }\n\n    if (inlineStyles.SUPERSCRIPT[offset]) {\n      styles.SUPERSCRIPT = true;\n    }\n\n    return styles;\n  }\n  /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */\n\n\n  function sameStyleAsPrevious(inlineStyles, styles, index) {\n    var sameStyled = true;\n\n    if (index > 0 && index < inlineStyles.length) {\n      styles.forEach(function (style) {\n        sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n      });\n    } else {\n      sameStyled = false;\n    }\n\n    return sameStyled;\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addInlineStyleMarkup(style, content) {\n    if (style === 'BOLD') {\n      return \"<strong>\".concat(content, \"</strong>\");\n    }\n\n    if (style === 'ITALIC') {\n      return \"<em>\".concat(content, \"</em>\");\n    }\n\n    if (style === 'UNDERLINE') {\n      return \"<ins>\".concat(content, \"</ins>\");\n    }\n\n    if (style === 'STRIKETHROUGH') {\n      return \"<del>\".concat(content, \"</del>\");\n    }\n\n    if (style === 'CODE') {\n      return \"<code>\".concat(content, \"</code>\");\n    }\n\n    if (style === 'SUPERSCRIPT') {\n      return \"<sup>\".concat(content, \"</sup>\");\n    }\n\n    if (style === 'SUBSCRIPT') {\n      return \"<sub>\".concat(content, \"</sub>\");\n    }\n\n    return content;\n  }\n  /**\n  * The function returns text for given section of block after doing required character replacements.\n  */\n\n\n  function getSectionText(text) {\n    if (text && text.length > 0) {\n      var chars = text.map(function (ch) {\n        switch (ch) {\n          case '\\n':\n            return '<br>';\n\n          case '&':\n            return '&amp;';\n\n          case '<':\n            return '&lt;';\n\n          case '>':\n            return '&gt;';\n\n          default:\n            return ch;\n        }\n      });\n      return chars.join('');\n    }\n\n    return '';\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addStylePropertyMarkup(styles, text) {\n    if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n      var styleString = 'style=\"';\n\n      if (styles.COLOR) {\n        styleString += \"color: \".concat(styles.COLOR, \";\");\n      }\n\n      if (styles.BGCOLOR) {\n        styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n      }\n\n      if (styles.FONTSIZE) {\n        styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? 'px' : '', \";\");\n      }\n\n      if (styles.FONTFAMILY) {\n        styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n      }\n\n      styleString += '\"';\n      return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n    }\n\n    return text;\n  }\n  /**\n  * Function will return markup for Entity.\n  */\n\n\n  function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n    var entity = entityMap[entityKey];\n\n    if (typeof customEntityTransform === 'function') {\n      var html = customEntityTransform(entity, text);\n\n      if (html) {\n        return html;\n      }\n    }\n\n    if (entity.type === 'MENTION') {\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(entity.data.value, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'LINK') {\n      var targetOption = entity.data.targetOption || '_self';\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" target=\\\"\").concat(targetOption, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'IMAGE') {\n      var alignment = entity.data.alignment;\n\n      if (alignment && alignment.length) {\n        return \"<div style=\\\"text-align:\".concat(alignment, \";\\\"><img src=\\\"\").concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/></div>\");\n      }\n\n      return \"<img src=\\\"\".concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/>\");\n    }\n\n    if (entity.type === 'EMBEDDED_LINK') {\n      return \"<iframe width=\\\"\".concat(entity.data.width, \"\\\" height=\\\"\").concat(entity.data.height, \"\\\" src=\\\"\").concat(entity.data.src, \"\\\" frameBorder=\\\"0\\\"></iframe>\");\n    }\n\n    return text;\n  }\n  /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */\n\n\n  function getInlineStyleSections(block, styles, start, end) {\n    var styleSections = [];\n    var text = Array.from(block.text);\n\n    if (text.length > 0) {\n      var inlineStyles = getStyleArrayForBlock(block);\n      var section;\n\n      for (var i = start; i < end; i += 1) {\n        if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n          section.text.push(text[i]);\n          section.end = i + 1;\n        } else {\n          section = {\n            styles: getStylesAtOffset(inlineStyles, i),\n            text: [text[i]],\n            start: i,\n            end: i + 1\n          };\n          styleSections.push(section);\n        }\n      }\n    }\n\n    return styleSections;\n  }\n  /**\n  * Replace leading blank spaces by &nbsp;\n  */\n\n\n  function trimLeadingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = 0; i < replacedText.length; i += 1) {\n        if (sectionText[i] === ' ') {\n          replacedText = replacedText.replace(' ', '&nbsp;');\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * Replace trailing blank spaces by &nbsp;\n  */\n\n\n  function trimTrailingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = replacedText.length - 1; i >= 0; i -= 1) {\n        if (replacedText[i] === ' ') {\n          replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */\n\n\n  function getStyleTagSectionMarkup(styleSection) {\n    var styles = styleSection.styles,\n        text = styleSection.text;\n    var content = getSectionText(text);\n    forEach(styles, function (style, value) {\n      content = addInlineStyleMarkup(style, content);\n    });\n    return content;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */\n\n\n  function getInlineStyleSectionMarkup(block, styleSection) {\n    var styleTagSections = getInlineStyleSections(block, ['BOLD', 'ITALIC', 'UNDERLINE', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'], styleSection.start, styleSection.end);\n    var styleSectionText = '';\n    styleTagSections.forEach(function (stylePropertySection) {\n      styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n    });\n    styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n    return styleSectionText;\n  }\n  /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */\n\n\n  function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n    var entityInlineMarkup = [];\n    var inlineStyleSections = getInlineStyleSections(block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY'], section.start, section.end);\n    inlineStyleSections.forEach(function (styleSection) {\n      entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n    });\n    var sectionText = entityInlineMarkup.join('');\n\n    if (section.type === 'ENTITY') {\n      if (section.entityKey !== undefined && section.entityKey !== null) {\n        sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n      }\n    } else if (section.type === 'HASHTAG') {\n      sectionText = \"<a href=\\\"\".concat(sectionText, \"\\\" class=\\\"wysiwyg-hashtag\\\">\").concat(sectionText, \"</a>\");\n    }\n\n    return sectionText;\n  }\n  /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */\n\n\n  function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n    var blockMarkup = [];\n    var sections = getSections(block, hashtagConfig);\n    sections.forEach(function (section, index) {\n      var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n\n      if (index === 0) {\n        sectionText = trimLeadingZeros(sectionText);\n      }\n\n      if (index === sections.length - 1) {\n        sectionText = trimTrailingZeros(sectionText);\n      }\n\n      blockMarkup.push(sectionText);\n    });\n    return blockMarkup.join('');\n  }\n  /**\n  * Function will return html for the block.\n  */\n\n\n  function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var blockHtml = [];\n\n    if (isAtomicEntityBlock(block)) {\n      blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n    } else {\n      var blockTag = getBlockTag(block.type);\n\n      if (blockTag) {\n        blockHtml.push(\"<\".concat(blockTag));\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          blockHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          blockHtml.push(' dir = \"auto\"');\n        }\n\n        blockHtml.push('>');\n        blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        blockHtml.push(\"</\".concat(blockTag, \">\"));\n      }\n    }\n\n    blockHtml.push('\\n');\n    return blockHtml.join('');\n  }\n  /**\n  * Function to check if a block is of type list.\n  */\n\n\n  function isList(blockType) {\n    return blockType === 'unordered-list-item' || blockType === 'ordered-list-item';\n  }\n  /**\n  * Function will return html markup for a list block.\n  */\n\n\n  function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var listHtml = [];\n    var nestedListBlock = [];\n    var previousBlock;\n    listBlocks.forEach(function (block) {\n      var nestedBlock = false;\n\n      if (!previousBlock) {\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.type !== block.type) {\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.depth === block.depth) {\n        if (nestedListBlock && nestedListBlock.length > 0) {\n          listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n          nestedListBlock = [];\n        }\n      } else {\n        nestedBlock = true;\n        nestedListBlock.push(block);\n      }\n\n      if (!nestedBlock) {\n        listHtml.push('<li');\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          listHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          listHtml.push(' dir = \"auto\"');\n        }\n\n        listHtml.push('>');\n        listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        listHtml.push('</li>\\n');\n        previousBlock = block;\n      }\n    });\n\n    if (nestedListBlock && nestedListBlock.length > 0) {\n      listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n    }\n\n    listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n    return listHtml.join('');\n  }\n  /**\n  * The function will generate html markup for given draftjs editorContent.\n  */\n\n\n  function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n    var html = [];\n\n    if (editorContent) {\n      var blocks = editorContent.blocks,\n          entityMap = editorContent.entityMap;\n\n      if (blocks && blocks.length > 0) {\n        var listBlocks = [];\n        blocks.forEach(function (block) {\n          if (isList(block.type)) {\n            listBlocks.push(block);\n          } else {\n            if (listBlocks.length > 0) {\n              var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n\n              html.push(listHtml);\n              listBlocks = [];\n            }\n\n            var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n            html.push(blockHtml);\n          }\n        });\n\n        if (listBlocks.length > 0) {\n          var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n\n          html.push(listHtml);\n          listBlocks = [];\n        }\n      }\n    }\n\n    return html.join('');\n  }\n\n  return draftToHtml;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","self","draftjsToHtml","forEach","obj","callback","key","hasOwnProperty","call","isEmptyString","str","undefined","length","trim","blockTypesMapping","unstyled","blockquote","code","getBlockTag","type","getBlockStyle","data","styles","value","concat","getHashtagRanges","blockText","hashtagConfig","sections","counter","startIndex","text","trigger","separator","substr","indexOf","endIndex","hashtag","push","offset","getSections","block","lastOffset","sectionRanges","entityRanges","map","range","sort","s1","s2","r","start","end","entityKey","isAtomicEntityBlock","getStyleArrayForBlock","inlineStyleRanges","inlineStyles","BOLD","Array","ITALIC","UNDERLINE","STRIKETHROUGH","CODE","SUPERSCRIPT","SUBSCRIPT","COLOR","BGCOLOR","FONTSIZE","FONTFAMILY","i","style","substring","getStylesAtOffset","sameStyleAsPrevious","index","sameStyled","addInlineStyleMarkup","content","getSectionText","chars","ch","join","addStylePropertyMarkup","styleString","test","getEntityMarkup","entityMap","customEntityTransform","entity","html","url","targetOption","alignment","src","alt","height","width","getInlineStyleSections","styleSections","from","section","trimLeadingZeros","sectionText","replacedText","replace","trimTrailingZeros","getStyleTagSectionMarkup","styleSection","getInlineStyleSectionMarkup","styleTagSections","styleSectionText","stylePropertySection","getSectionMarkup","entityInlineMarkup","inlineStyleSections","getBlockInnerMarkup","blockMarkup","getBlockMarkup","directional","blockHtml","blockTag","blockStyle","isList","blockType","getListMarkup","listBlocks","listHtml","nestedListBlock","previousBlock","nestedBlock","depth","draftToHtml","editorContent","blocks"],"sources":["/Users/macuser/Documents/amccar15.github.io/node_modules/draftjs-to-html/lib/draftjs-to-html.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.draftjsToHtml = factory());\n}(this, (function () { 'use strict';\n\n  /**\n  * Utility function to execute callback for eack key->value pair.\n  */\n  function forEach(obj, callback) {\n    if (obj) {\n      for (var key in obj) {\n        // eslint-disable-line no-restricted-syntax\n        if ({}.hasOwnProperty.call(obj, key)) {\n          callback(key, obj[key]);\n        }\n      }\n    }\n  }\n  /**\n  * The function returns true if the string passed to it has no content.\n  */\n\n  function isEmptyString(str) {\n    if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n  * Mapping block-type to corresponding html tag.\n  */\n\n  var blockTypesMapping = {\n    unstyled: 'p',\n    'header-one': 'h1',\n    'header-two': 'h2',\n    'header-three': 'h3',\n    'header-four': 'h4',\n    'header-five': 'h5',\n    'header-six': 'h6',\n    'unordered-list-item': 'ul',\n    'ordered-list-item': 'ol',\n    blockquote: 'blockquote',\n    code: 'pre'\n  };\n  /**\n  * Function will return HTML tag for a block.\n  */\n\n  function getBlockTag(type) {\n    return type && blockTypesMapping[type];\n  }\n  /**\n  * Function will return style string for a block.\n  */\n\n  function getBlockStyle(data) {\n    var styles = '';\n    forEach(data, function (key, value) {\n      if (value) {\n        styles += \"\".concat(key, \":\").concat(value, \";\");\n      }\n    });\n    return styles;\n  }\n  /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */\n\n  function getHashtagRanges(blockText, hashtagConfig) {\n    var sections = [];\n\n    if (hashtagConfig) {\n      var counter = 0;\n      var startIndex = 0;\n      var text = blockText;\n      var trigger = hashtagConfig.trigger || '#';\n      var separator = hashtagConfig.separator || ' ';\n\n      for (; text.length > 0 && startIndex >= 0;) {\n        if (text[0] === trigger) {\n          startIndex = 0;\n          counter = 0;\n          text = text.substr(trigger.length);\n        } else {\n          startIndex = text.indexOf(separator + trigger);\n\n          if (startIndex >= 0) {\n            text = text.substr(startIndex + (separator + trigger).length);\n            counter += startIndex + separator.length;\n          }\n        }\n\n        if (startIndex >= 0) {\n          var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n          var hashtag = text.substr(0, endIndex);\n\n          if (hashtag && hashtag.length > 0) {\n            sections.push({\n              offset: counter,\n              length: hashtag.length + trigger.length,\n              type: 'HASHTAG'\n            });\n          }\n\n          counter += trigger.length;\n        }\n      }\n    }\n\n    return sections;\n  }\n  /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */\n\n\n  function getSections(block, hashtagConfig) {\n    var sections = [];\n    var lastOffset = 0;\n    var sectionRanges = block.entityRanges.map(function (range) {\n      var offset = range.offset,\n          length = range.length,\n          key = range.key;\n      return {\n        offset: offset,\n        length: length,\n        key: key,\n        type: 'ENTITY'\n      };\n    });\n    sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n    sectionRanges = sectionRanges.sort(function (s1, s2) {\n      return s1.offset - s2.offset;\n    });\n    sectionRanges.forEach(function (r) {\n      if (r.offset > lastOffset) {\n        sections.push({\n          start: lastOffset,\n          end: r.offset\n        });\n      }\n\n      sections.push({\n        start: r.offset,\n        end: r.offset + r.length,\n        entityKey: r.key,\n        type: r.type\n      });\n      lastOffset = r.offset + r.length;\n    });\n\n    if (lastOffset < block.text.length) {\n      sections.push({\n        start: lastOffset,\n        end: block.text.length\n      });\n    }\n\n    return sections;\n  }\n  /**\n  * Function to check if the block is an atomic entity block.\n  */\n\n\n  function isAtomicEntityBlock(block) {\n    if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === 'atomic')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * The function will return array of inline styles applicable to the block.\n  */\n\n\n  function getStyleArrayForBlock(block) {\n    var text = block.text,\n        inlineStyleRanges = block.inlineStyleRanges;\n    var inlineStyles = {\n      BOLD: new Array(text.length),\n      ITALIC: new Array(text.length),\n      UNDERLINE: new Array(text.length),\n      STRIKETHROUGH: new Array(text.length),\n      CODE: new Array(text.length),\n      SUPERSCRIPT: new Array(text.length),\n      SUBSCRIPT: new Array(text.length),\n      COLOR: new Array(text.length),\n      BGCOLOR: new Array(text.length),\n      FONTSIZE: new Array(text.length),\n      FONTFAMILY: new Array(text.length),\n      length: text.length\n    };\n\n    if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n      inlineStyleRanges.forEach(function (range) {\n        var offset = range.offset;\n        var length = offset + range.length;\n\n        for (var i = offset; i < length; i += 1) {\n          if (range.style.indexOf('color-') === 0) {\n            inlineStyles.COLOR[i] = range.style.substring(6);\n          } else if (range.style.indexOf('bgcolor-') === 0) {\n            inlineStyles.BGCOLOR[i] = range.style.substring(8);\n          } else if (range.style.indexOf('fontsize-') === 0) {\n            inlineStyles.FONTSIZE[i] = range.style.substring(9);\n          } else if (range.style.indexOf('fontfamily-') === 0) {\n            inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n          } else if (inlineStyles[range.style]) {\n            inlineStyles[range.style][i] = true;\n          }\n        }\n      });\n    }\n\n    return inlineStyles;\n  }\n  /**\n  * The function will return inline style applicable at some offset within a block.\n  */\n\n\n  function getStylesAtOffset(inlineStyles, offset) {\n    var styles = {};\n\n    if (inlineStyles.COLOR[offset]) {\n      styles.COLOR = inlineStyles.COLOR[offset];\n    }\n\n    if (inlineStyles.BGCOLOR[offset]) {\n      styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n    }\n\n    if (inlineStyles.FONTSIZE[offset]) {\n      styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n    }\n\n    if (inlineStyles.FONTFAMILY[offset]) {\n      styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n    }\n\n    if (inlineStyles.UNDERLINE[offset]) {\n      styles.UNDERLINE = true;\n    }\n\n    if (inlineStyles.ITALIC[offset]) {\n      styles.ITALIC = true;\n    }\n\n    if (inlineStyles.BOLD[offset]) {\n      styles.BOLD = true;\n    }\n\n    if (inlineStyles.STRIKETHROUGH[offset]) {\n      styles.STRIKETHROUGH = true;\n    }\n\n    if (inlineStyles.CODE[offset]) {\n      styles.CODE = true;\n    }\n\n    if (inlineStyles.SUBSCRIPT[offset]) {\n      styles.SUBSCRIPT = true;\n    }\n\n    if (inlineStyles.SUPERSCRIPT[offset]) {\n      styles.SUPERSCRIPT = true;\n    }\n\n    return styles;\n  }\n  /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */\n\n  function sameStyleAsPrevious(inlineStyles, styles, index) {\n    var sameStyled = true;\n\n    if (index > 0 && index < inlineStyles.length) {\n      styles.forEach(function (style) {\n        sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n      });\n    } else {\n      sameStyled = false;\n    }\n\n    return sameStyled;\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n  function addInlineStyleMarkup(style, content) {\n    if (style === 'BOLD') {\n      return \"<strong>\".concat(content, \"</strong>\");\n    }\n\n    if (style === 'ITALIC') {\n      return \"<em>\".concat(content, \"</em>\");\n    }\n\n    if (style === 'UNDERLINE') {\n      return \"<ins>\".concat(content, \"</ins>\");\n    }\n\n    if (style === 'STRIKETHROUGH') {\n      return \"<del>\".concat(content, \"</del>\");\n    }\n\n    if (style === 'CODE') {\n      return \"<code>\".concat(content, \"</code>\");\n    }\n\n    if (style === 'SUPERSCRIPT') {\n      return \"<sup>\".concat(content, \"</sup>\");\n    }\n\n    if (style === 'SUBSCRIPT') {\n      return \"<sub>\".concat(content, \"</sub>\");\n    }\n\n    return content;\n  }\n  /**\n  * The function returns text for given section of block after doing required character replacements.\n  */\n\n  function getSectionText(text) {\n    if (text && text.length > 0) {\n      var chars = text.map(function (ch) {\n        switch (ch) {\n          case '\\n':\n            return '<br>';\n\n          case '&':\n            return '&amp;';\n\n          case '<':\n            return '&lt;';\n\n          case '>':\n            return '&gt;';\n\n          default:\n            return ch;\n        }\n      });\n      return chars.join('');\n    }\n\n    return '';\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addStylePropertyMarkup(styles, text) {\n    if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n      var styleString = 'style=\"';\n\n      if (styles.COLOR) {\n        styleString += \"color: \".concat(styles.COLOR, \";\");\n      }\n\n      if (styles.BGCOLOR) {\n        styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n      }\n\n      if (styles.FONTSIZE) {\n        styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? 'px' : '', \";\");\n      }\n\n      if (styles.FONTFAMILY) {\n        styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n      }\n\n      styleString += '\"';\n      return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n    }\n\n    return text;\n  }\n  /**\n  * Function will return markup for Entity.\n  */\n\n  function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n    var entity = entityMap[entityKey];\n\n    if (typeof customEntityTransform === 'function') {\n      var html = customEntityTransform(entity, text);\n\n      if (html) {\n        return html;\n      }\n    }\n\n    if (entity.type === 'MENTION') {\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(entity.data.value, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'LINK') {\n      var targetOption = entity.data.targetOption || '_self';\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" target=\\\"\").concat(targetOption, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'IMAGE') {\n      var alignment = entity.data.alignment;\n\n      if (alignment && alignment.length) {\n        return \"<div style=\\\"text-align:\".concat(alignment, \";\\\"><img src=\\\"\").concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/></div>\");\n      }\n\n      return \"<img src=\\\"\".concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/>\");\n    }\n\n    if (entity.type === 'EMBEDDED_LINK') {\n      return \"<iframe width=\\\"\".concat(entity.data.width, \"\\\" height=\\\"\").concat(entity.data.height, \"\\\" src=\\\"\").concat(entity.data.src, \"\\\" frameBorder=\\\"0\\\"></iframe>\");\n    }\n\n    return text;\n  }\n  /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */\n\n\n  function getInlineStyleSections(block, styles, start, end) {\n    var styleSections = [];\n    var text = Array.from(block.text);\n\n    if (text.length > 0) {\n      var inlineStyles = getStyleArrayForBlock(block);\n      var section;\n\n      for (var i = start; i < end; i += 1) {\n        if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n          section.text.push(text[i]);\n          section.end = i + 1;\n        } else {\n          section = {\n            styles: getStylesAtOffset(inlineStyles, i),\n            text: [text[i]],\n            start: i,\n            end: i + 1\n          };\n          styleSections.push(section);\n        }\n      }\n    }\n\n    return styleSections;\n  }\n  /**\n  * Replace leading blank spaces by &nbsp;\n  */\n\n\n  function trimLeadingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = 0; i < replacedText.length; i += 1) {\n        if (sectionText[i] === ' ') {\n          replacedText = replacedText.replace(' ', '&nbsp;');\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * Replace trailing blank spaces by &nbsp;\n  */\n\n  function trimTrailingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = replacedText.length - 1; i >= 0; i -= 1) {\n        if (replacedText[i] === ' ') {\n          replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */\n\n  function getStyleTagSectionMarkup(styleSection) {\n    var styles = styleSection.styles,\n        text = styleSection.text;\n    var content = getSectionText(text);\n    forEach(styles, function (style, value) {\n      content = addInlineStyleMarkup(style, content);\n    });\n    return content;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */\n\n\n  function getInlineStyleSectionMarkup(block, styleSection) {\n    var styleTagSections = getInlineStyleSections(block, ['BOLD', 'ITALIC', 'UNDERLINE', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'], styleSection.start, styleSection.end);\n    var styleSectionText = '';\n    styleTagSections.forEach(function (stylePropertySection) {\n      styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n    });\n    styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n    return styleSectionText;\n  }\n  /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */\n\n\n  function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n    var entityInlineMarkup = [];\n    var inlineStyleSections = getInlineStyleSections(block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY'], section.start, section.end);\n    inlineStyleSections.forEach(function (styleSection) {\n      entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n    });\n    var sectionText = entityInlineMarkup.join('');\n\n    if (section.type === 'ENTITY') {\n      if (section.entityKey !== undefined && section.entityKey !== null) {\n        sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n      }\n    } else if (section.type === 'HASHTAG') {\n      sectionText = \"<a href=\\\"\".concat(sectionText, \"\\\" class=\\\"wysiwyg-hashtag\\\">\").concat(sectionText, \"</a>\");\n    }\n\n    return sectionText;\n  }\n  /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */\n\n\n  function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n    var blockMarkup = [];\n    var sections = getSections(block, hashtagConfig);\n    sections.forEach(function (section, index) {\n      var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n\n      if (index === 0) {\n        sectionText = trimLeadingZeros(sectionText);\n      }\n\n      if (index === sections.length - 1) {\n        sectionText = trimTrailingZeros(sectionText);\n      }\n\n      blockMarkup.push(sectionText);\n    });\n    return blockMarkup.join('');\n  }\n  /**\n  * Function will return html for the block.\n  */\n\n  function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var blockHtml = [];\n\n    if (isAtomicEntityBlock(block)) {\n      blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n    } else {\n      var blockTag = getBlockTag(block.type);\n\n      if (blockTag) {\n        blockHtml.push(\"<\".concat(blockTag));\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          blockHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          blockHtml.push(' dir = \"auto\"');\n        }\n\n        blockHtml.push('>');\n        blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        blockHtml.push(\"</\".concat(blockTag, \">\"));\n      }\n    }\n\n    blockHtml.push('\\n');\n    return blockHtml.join('');\n  }\n\n  /**\n  * Function to check if a block is of type list.\n  */\n\n  function isList(blockType) {\n    return blockType === 'unordered-list-item' || blockType === 'ordered-list-item';\n  }\n  /**\n  * Function will return html markup for a list block.\n  */\n\n  function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var listHtml = [];\n    var nestedListBlock = [];\n    var previousBlock;\n    listBlocks.forEach(function (block) {\n      var nestedBlock = false;\n\n      if (!previousBlock) {\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.type !== block.type) {\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.depth === block.depth) {\n        if (nestedListBlock && nestedListBlock.length > 0) {\n          listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n          nestedListBlock = [];\n        }\n      } else {\n        nestedBlock = true;\n        nestedListBlock.push(block);\n      }\n\n      if (!nestedBlock) {\n        listHtml.push('<li');\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          listHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          listHtml.push(' dir = \"auto\"');\n        }\n\n        listHtml.push('>');\n        listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        listHtml.push('</li>\\n');\n        previousBlock = block;\n      }\n    });\n\n    if (nestedListBlock && nestedListBlock.length > 0) {\n      listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n    }\n\n    listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n    return listHtml.join('');\n  }\n\n  /**\n  * The function will generate html markup for given draftjs editorContent.\n  */\n\n  function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n    var html = [];\n\n    if (editorContent) {\n      var blocks = editorContent.blocks,\n          entityMap = editorContent.entityMap;\n\n      if (blocks && blocks.length > 0) {\n        var listBlocks = [];\n        blocks.forEach(function (block) {\n          if (isList(block.type)) {\n            listBlocks.push(block);\n          } else {\n            if (listBlocks.length > 0) {\n              var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n\n              html.push(listHtml);\n              listBlocks = [];\n            }\n\n            var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n            html.push(blockHtml);\n          }\n        });\n\n        if (listBlocks.length > 0) {\n          var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n\n          html.push(listHtml);\n          listBlocks = [];\n        }\n      }\n    }\n\n    return html.join('');\n  }\n\n  return draftToHtml;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}