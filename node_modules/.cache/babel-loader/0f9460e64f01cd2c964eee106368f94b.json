{"ast":null,"code":"import invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server'; // see http://w3c.github.io/html/syntax.html#writing-html-documents-elements\n\nvar VOID_TAGS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nexport default function splitReactElement(element) {\n  if (VOID_TAGS.indexOf(element.type) !== -1) {\n    return ReactDOMServer.renderToStaticMarkup(element);\n  }\n\n  var tags = ReactDOMServer.renderToStaticMarkup(React.cloneElement(element, {}, '\\r')).split('\\r');\n  invariant(tags.length > 1, \"convertToHTML: Element of type \".concat(element.type, \" must render children\"));\n  invariant(tags.length < 3, \"convertToHTML: Element of type \".concat(element.type, \" cannot use carriage return character\"));\n  return {\n    start: tags[0],\n    end: tags[1]\n  };\n}","map":{"version":3,"names":["invariant","React","ReactDOMServer","VOID_TAGS","splitReactElement","element","indexOf","type","renderToStaticMarkup","tags","cloneElement","split","length","concat","start","end"],"sources":["/Users/macuser/Documents/amccar15.github.io/node_modules/draft-convert/esm/util/splitReactElement.js"],"sourcesContent":["import invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server'; // see http://w3c.github.io/html/syntax.html#writing-html-documents-elements\n\nvar VOID_TAGS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nexport default function splitReactElement(element) {\n  if (VOID_TAGS.indexOf(element.type) !== -1) {\n    return ReactDOMServer.renderToStaticMarkup(element);\n  }\n\n  var tags = ReactDOMServer.renderToStaticMarkup(React.cloneElement(element, {}, '\\r')).split('\\r');\n  invariant(tags.length > 1, \"convertToHTML: Element of type \".concat(element.type, \" must render children\"));\n  invariant(tags.length < 3, \"convertToHTML: Element of type \".concat(element.type, \" cannot use carriage return character\"));\n  return {\n    start: tags[0],\n    end: tags[1]\n  };\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAA+C;;AAE/C,IAAIC,SAAS,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC,IAAvC,EAA6C,KAA7C,EAAoD,OAApD,EAA6D,MAA7D,EAAqE,MAArE,EAA6E,OAA7E,EAAsF,QAAtF,EAAgG,OAAhG,EAAyG,KAAzG,CAAhB;AACA,eAAe,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;EACjD,IAAIF,SAAS,CAACG,OAAV,CAAkBD,OAAO,CAACE,IAA1B,MAAoC,CAAC,CAAzC,EAA4C;IAC1C,OAAOL,cAAc,CAACM,oBAAf,CAAoCH,OAApC,CAAP;EACD;;EAED,IAAII,IAAI,GAAGP,cAAc,CAACM,oBAAf,CAAoCP,KAAK,CAACS,YAAN,CAAmBL,OAAnB,EAA4B,EAA5B,EAAgC,IAAhC,CAApC,EAA2EM,KAA3E,CAAiF,IAAjF,CAAX;EACAX,SAAS,CAACS,IAAI,CAACG,MAAL,GAAc,CAAf,EAAkB,kCAAkCC,MAAlC,CAAyCR,OAAO,CAACE,IAAjD,EAAuD,uBAAvD,CAAlB,CAAT;EACAP,SAAS,CAACS,IAAI,CAACG,MAAL,GAAc,CAAf,EAAkB,kCAAkCC,MAAlC,CAAyCR,OAAO,CAACE,IAAjD,EAAuD,uCAAvD,CAAlB,CAAT;EACA,OAAO;IACLO,KAAK,EAAEL,IAAI,CAAC,CAAD,CADN;IAELM,GAAG,EAAEN,IAAI,CAAC,CAAD;EAFJ,CAAP;AAID"},"metadata":{},"sourceType":"module"}