{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();\n})(this, function () {\n  'use strict';\n\n  var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n    return isIterable(value) ? value : Seq(value);\n  }\n\n  createClass(KeyedIterable, Iterable);\n\n  function KeyedIterable(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  createClass(IndexedIterable, Iterable);\n\n  function IndexedIterable(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  createClass(SetIterable, Iterable);\n\n  function SetIterable(value) {\n    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@'; // Used for setting prototype methods that IE8 chokes on.\n\n  var DELETE = 'delete'; // Constants describing the size of trie nodes.\n\n  var SHIFT = 5; // Resulted in best performance after ______?\n\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1; // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n\n  var NOT_SET = {}; // Boolean references, Rough equivalent of `bool &`.\n\n  var CHANGE_LENGTH = {\n    value: false\n  };\n  var DID_ALTER = {\n    value: false\n  };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  } // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n\n\n  function OwnerID() {} // http://jsperf.com/copy-array-inline\n\n\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32âˆ’1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n\n      index = uint32Index;\n    }\n\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);\n  }\n  /* global Symbol */\n\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n  function Iterator(next) {\n    this.next = next;\n  }\n\n  Iterator.prototype.toString = function () {\n    return '[Iterator]';\n  };\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {\n    return this.toString();\n  };\n\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? iteratorResult.value = value : iteratorResult = {\n      value: value,\n      done: false\n    };\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n\n  function Seq(value) {\n    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);\n  }\n\n  Seq.of = function\n    /*...values*/\n  () {\n    return Seq(arguments);\n  };\n\n  Seq.prototype.toSeq = function () {\n    return this;\n  };\n\n  Seq.prototype.toString = function () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n\n    return this;\n  }; // abstract __iterateUncached(fn, reverse)\n\n\n  Seq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, true);\n  }; // abstract __iteratorUncached(type, reverse)\n\n\n  Seq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, true);\n  };\n\n  createClass(KeyedSeq, Seq);\n\n  function KeyedSeq(value) {\n    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);\n  }\n\n  KeyedSeq.prototype.toKeyedSeq = function () {\n    return this;\n  };\n\n  createClass(IndexedSeq, Seq);\n\n  function IndexedSeq(value) {\n    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n  }\n\n  IndexedSeq.of = function\n    /*...values*/\n  () {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function () {\n    return this.__toString('Seq [', ']');\n  };\n\n  IndexedSeq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, false);\n  };\n\n  IndexedSeq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, false);\n  };\n\n  createClass(SetSeq, Seq);\n\n  function SetSeq(value) {\n    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();\n  }\n\n  SetSeq.of = function\n    /*...values*/\n  () {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function () {\n    return this;\n  };\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n  createClass(ArraySeq, IndexedSeq);\n\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  ArraySeq.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function (fn, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n        return ii + 1;\n      }\n    }\n\n    return ii;\n  };\n\n  ArraySeq.prototype.__iterator = function (type, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);\n    });\n  };\n\n  createClass(ObjectSeq, KeyedSeq);\n\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  ObjectSeq.prototype.get = function (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function (key) {\n    return this._object.hasOwnProperty(key);\n  };\n\n  ObjectSeq.prototype.__iterate = function (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      var key = keys[reverse ? maxIndex - ii : ii];\n\n      if (fn(object[key], key, this) === false) {\n        return ii + 1;\n      }\n    }\n\n    return ii;\n  };\n\n  ObjectSeq.prototype.__iterator = function (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);\n    });\n  };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n  createClass(IterableSeq, IndexedSeq);\n\n  function IterableSeq(iterable) {\n    this._iterable = iterable;\n    this.size = iterable.length || iterable.size;\n  }\n\n  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    var iterations = 0;\n\n    if (isIterator(iterator)) {\n      var step;\n\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n\n    return iterations;\n  };\n\n  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  createClass(IteratorSeq, IndexedSeq);\n\n  function IteratorSeq(iterator) {\n    this._iterator = iterator;\n    this._iteratorCache = [];\n  }\n\n  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n\n    while (iterations < cache.length) {\n      if (fn(cache[iterations], iterations++, this) === false) {\n        return iterations;\n      }\n    }\n\n    var step;\n\n    while (!(step = iterator.next()).done) {\n      var val = step.value;\n      cache[iterations] = val;\n\n      if (fn(val, iterations++, this) === false) {\n        break;\n      }\n    }\n\n    return iterations;\n  };\n\n  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    return new Iterator(function () {\n      if (iterations >= cache.length) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        cache[iterations] = step.value;\n      }\n\n      return iteratorValue(type, iterations, cache[iterations++]);\n    });\n  }; // # pragma Helper functions\n\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;\n\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);\n    }\n\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values: ' + value);\n    }\n\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);\n\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);\n    }\n\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n\n    if (cache) {\n      var maxIndex = cache.length - 1;\n\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n\n      return ii;\n    }\n\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function () {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ? fromJSWith(converter, json, '', {\n      '': json\n    }) : fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n\n\n  function is(valueA, valueB) {\n    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n      return true;\n    }\n\n    if (!valueA || !valueB) {\n      return false;\n    }\n\n    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n\n      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n        return true;\n      }\n\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n\n    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n\n    var bSize = b.__iterate(function (v, k) {\n      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  Repeat.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n\n  Repeat.prototype.reverse = function () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function (fn, reverse) {\n    for (var ii = 0; ii < this.size; ii++) {\n      if (fn(this._value, ii, this) === false) {\n        return ii + 1;\n      }\n    }\n\n    return ii;\n  };\n\n  Repeat.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();\n    });\n  };\n\n  Repeat.prototype.equals = function (other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n\n    if (end === undefined) {\n      end = Infinity;\n    }\n\n    step = step === undefined ? 1 : Math.abs(step);\n\n    if (end < start) {\n      step = -step;\n    }\n\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n\n      EMPTY_RANGE = this;\n    }\n  }\n\n  Range.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n\n    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';\n  };\n\n  Range.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n\n  Range.prototype.includes = function (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n\n  Range.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n\n  Range.prototype.indexOf = function (searchValue) {\n    var offsetValue = searchValue - this._start;\n\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function (fn, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(value, ii, this) === false) {\n        return ii + 1;\n      }\n\n      value += reverse ? -step : step;\n    }\n\n    return ii;\n  };\n\n  Range.prototype.__iterator = function (type, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    var ii = 0;\n    return new Iterator(function () {\n      var v = value;\n      value += reverse ? -step : step;\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n    });\n  };\n\n  Range.prototype.equals = function (other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n\n  var EMPTY_RANGE;\n  createClass(Collection, Iterable);\n\n  function Collection() {\n    throw TypeError('Abstract');\n  }\n\n  createClass(KeyedCollection, Collection);\n\n  function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);\n\n  function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);\n\n  function SetCollection() {}\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n    a = a | 0; // int\n\n    b = b | 0; // int\n\n    var c = a & 0xffff;\n    var d = b & 0xffff; // Shift by 0 fixes the sign on the high part.\n\n    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n  }; // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n\n  function smi(i32) {\n    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n\n    if (o === true) {\n      return 1;\n    }\n\n    var type = typeof o;\n\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n\n      var h = o | 0;\n\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n\n      return smi(h);\n    }\n\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n\n    if (hash === undefined) {\n      hash = hashString(string);\n\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n\n    return hash;\n  } // http://jsperf.com/hashing-strings\n\n\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function () {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  } // Get references to ES5 object methods.\n\n\n  var isExtensible = Object.isExtensible; // True if Object.defineProperty works as expected. IE8 fails this test.\n\n  var canDefineProperty = function () {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }(); // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n\n\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1:\n          // Element\n          return node.uniqueID;\n\n        case 9:\n          // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  } // If possible, use a WeakMap.\n\n\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n  var UID_HASH_KEY = '__immutablehash__';\n\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n  }\n\n  createClass(Map, KeyedCollection); // @pragma Construction\n\n  function Map(value) {\n    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  Map.of = function () {\n    var keyValues = SLICE$0.call(arguments, 0);\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function () {\n    return this.__toString('Map {', '}');\n  }; // @pragma Access\n\n\n  Map.prototype.get = function (k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  }; // @pragma Modification\n\n\n  Map.prototype.set = function (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.setIn = function (keyPath, v) {\n    return this.updateIn(keyPath, NOT_SET, function () {\n      return v;\n    });\n  };\n\n  Map.prototype.remove = function (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteIn = function (keyPath) {\n    return this.updateIn(keyPath, function () {\n      return NOT_SET;\n    });\n  };\n\n  Map.prototype.update = function (k, notSetValue, updater) {\n    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);\n  };\n\n  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {\n    if (!updater) {\n      updater = notSetValue;\n      notSetValue = undefined;\n    }\n\n    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);\n    return updatedValue === NOT_SET ? undefined : updatedValue;\n  };\n\n  Map.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyMap();\n  }; // @pragma Composition\n\n\n  Map.prototype.merge = function\n    /*...iters*/\n  () {\n    return mergeIntoMapWith(this, undefined, arguments);\n  };\n\n  Map.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, merger, iters);\n  };\n\n  Map.prototype.mergeIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.mergeDeep = function\n    /*...iters*/\n  () {\n    return mergeIntoMapWith(this, deepMerger, arguments);\n  };\n\n  Map.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n  };\n\n  Map.prototype.mergeDeepIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  }; // @pragma Mutability\n\n\n  Map.prototype.withMutations = function (fn) {\n    var mutable = this.asMutable();\n    fn(mutable);\n    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n  };\n\n  Map.prototype.asMutable = function () {\n    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n  };\n\n  Map.prototype.asImmutable = function () {\n    return this.__ensureOwner();\n  };\n\n  Map.prototype.wasAltered = function () {\n    return this.__altered;\n  };\n\n  Map.prototype.__iterator = function (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    this._root && this._root.iterate(function (entry) {\n      iterations++;\n      return fn(entry[1], entry[0], this$0);\n    }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn; // #pragma Trie Nodes\n\n  function ArrayMapNode(ownerID, entries) {\n    this.ownerID = ownerID;\n    this.entries = entries;\n  }\n\n  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n\n    return notSetValue;\n  };\n\n  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var entries = this.entries;\n    var idx = 0;\n\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && entries.length === 1) {\n      return; // undefined\n    }\n\n    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n      return createNodes(ownerID, entries, key, value);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new ArrayMapNode(ownerID, newEntries);\n  };\n\n  function BitmapIndexedNode(ownerID, bitmap, nodes) {\n    this.ownerID = ownerID;\n    this.bitmap = bitmap;\n    this.nodes = nodes;\n  }\n\n  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n    var bitmap = this.bitmap;\n    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n  };\n\n  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var bit = 1 << keyHashFrag;\n    var bitmap = this.bitmap;\n    var exists = (bitmap & bit) !== 0;\n\n    if (!exists && value === NOT_SET) {\n      return this;\n    }\n\n    var idx = popCount(bitmap & bit - 1);\n    var nodes = this.nodes;\n    var node = exists ? nodes[idx] : undefined;\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n    if (newNode === node) {\n      return this;\n    }\n\n    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n    }\n\n    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n      return nodes[idx ^ 1];\n    }\n\n    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n      return newNode;\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.bitmap = newBitmap;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n  };\n\n  function HashArrayMapNode(ownerID, count, nodes) {\n    this.ownerID = ownerID;\n    this.count = count;\n    this.nodes = nodes;\n  }\n\n  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var node = this.nodes[idx];\n    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n  };\n\n  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var removed = value === NOT_SET;\n    var nodes = this.nodes;\n    var node = nodes[idx];\n\n    if (removed && !node) {\n      return this;\n    }\n\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n    if (newNode === node) {\n      return this;\n    }\n\n    var newCount = this.count;\n\n    if (!node) {\n      newCount++;\n    } else if (!newNode) {\n      newCount--;\n\n      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n        return packNodes(ownerID, nodes, newCount, idx);\n      }\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.count = newCount;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new HashArrayMapNode(ownerID, newCount, newNodes);\n  };\n\n  function HashCollisionNode(ownerID, keyHash, entries) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entries = entries;\n  }\n\n  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n\n    return notSetValue;\n  };\n\n  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var removed = value === NOT_SET;\n\n    if (keyHash !== this.keyHash) {\n      if (removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n    }\n\n    var entries = this.entries;\n    var idx = 0;\n\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && len === 2) {\n      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n  };\n\n  function ValueNode(ownerID, keyHash, entry) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entry = entry;\n  }\n\n  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n  };\n\n  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var keyMatch = is(key, this.entry[0]);\n\n    if (keyMatch ? value === this.entry[1] : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n\n    if (removed) {\n      SetRef(didChangeSize);\n      return; // undefined\n    }\n\n    if (keyMatch) {\n      if (ownerID && ownerID === this.ownerID) {\n        this.entry[1] = value;\n        return this;\n      }\n\n      return new ValueNode(ownerID, this.keyHash, [key, value]);\n    }\n\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n  }; // #pragma Iterators\n\n\n  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  };\n\n  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  };\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  };\n\n  createClass(MapIterator, Iterator);\n\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  MapIterator.prototype.next = function () {\n    var type = this._type;\n    var stack = this._stack;\n\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex;\n\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n\n          continue;\n        }\n      }\n\n      stack = this._stack = this._stack.__prev;\n    }\n\n    return iteratorDone();\n  };\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n\n      if (!didAlter.value) {\n        return map;\n      }\n\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var newNode;\n    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n\n      iters.push(iter);\n    }\n\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function (existing, value, key) {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return collection;\n    }\n\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n\n    return collection.withMutations(function (collection) {\n      var mergeIntoMap = merger ? function (value, key) {\n        collection.update(key, NOT_SET, function (existing) {\n          return existing === NOT_SET ? value : merger(existing, value, key);\n        });\n      } : function (value, key) {\n        collection.set(key, value);\n      };\n\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n\n    invariant(isNotSet || existing && existing.set, 'invalid keyPath');\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);\n    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - (x >> 1 & 0x55555555);\n    x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n    x = x + (x >> 4) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n\n    var newArray = new Array(newLen);\n    var after = 0;\n\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n\n    var newArray = new Array(newLen);\n    var after = 0;\n\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n\n      newArray[ii] = array[ii + after];\n    }\n\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n  createClass(List, IndexedCollection); // @pragma Construction\n\n  function List(value) {\n    var empty = emptyList();\n\n    if (value === null || value === undefined) {\n      return empty;\n    }\n\n    if (isList(value)) {\n      return value;\n    }\n\n    var iter = IndexedIterable(value);\n    var size = iter.size;\n\n    if (size === 0) {\n      return empty;\n    }\n\n    assertNotInfinite(size);\n\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) {\n        return list.set(i, v);\n      });\n    });\n  }\n\n  List.of = function\n    /*...values*/\n  () {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function () {\n    return this.__toString('List [', ']');\n  }; // @pragma Access\n\n\n  List.prototype.get = function (index, notSetValue) {\n    index = wrapIndex(this, index);\n\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n\n    return notSetValue;\n  }; // @pragma Modification\n\n\n  List.prototype.set = function (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function (index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyList();\n  };\n\n  List.prototype.push = function\n    /*...values*/\n  () {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function\n    /*...values*/\n  () {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function () {\n    return setListBounds(this, 1);\n  }; // @pragma Composition\n\n\n  List.prototype.merge = function\n    /*...iters*/\n  () {\n    return mergeIntoListWith(this, undefined, arguments);\n  };\n\n  List.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, merger, iters);\n  };\n\n  List.prototype.mergeDeep = function\n    /*...iters*/\n  () {\n    return mergeIntoListWith(this, deepMerger, arguments);\n  };\n\n  List.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, deepMergerWith(merger), iters);\n  };\n\n  List.prototype.setSize = function (size) {\n    return setListBounds(this, 0, size);\n  }; // @pragma Iteration\n\n\n  List.prototype.slice = function (begin, end) {\n    var size = this.size;\n\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  };\n\n  List.prototype.__iterator = function (type, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function (fn, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    var value;\n\n    while ((value = values()) !== DONE) {\n      if (fn(value, index++, this) === false) {\n        break;\n      }\n    }\n\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      return this;\n    }\n\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  };\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function VNode(array, ownerID) {\n    this.array = array;\n    this.ownerID = ownerID;\n  } // TODO: seems like these methods are very similar\n\n\n  VNode.prototype.removeBefore = function (ownerID, level, index) {\n    if (index === level ? 1 << level : 0 || this.array.length === 0) {\n      return this;\n    }\n\n    var originIndex = index >>> level & MASK;\n\n    if (originIndex >= this.array.length) {\n      return new VNode([], ownerID);\n    }\n\n    var removingFirst = originIndex === 0;\n    var newChild;\n\n    if (level > 0) {\n      var oldChild = this.array[originIndex];\n      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n\n      if (newChild === oldChild && removingFirst) {\n        return this;\n      }\n    }\n\n    if (removingFirst && !newChild) {\n      return this;\n    }\n\n    var editable = editableVNode(this, ownerID);\n\n    if (!removingFirst) {\n      for (var ii = 0; ii < originIndex; ii++) {\n        editable.array[ii] = undefined;\n      }\n    }\n\n    if (newChild) {\n      editable.array[originIndex] = newChild;\n    }\n\n    return editable;\n  };\n\n  VNode.prototype.removeAfter = function (ownerID, level, index) {\n    if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n      return this;\n    }\n\n    var sizeIndex = index - 1 >>> level & MASK;\n\n    if (sizeIndex >= this.array.length) {\n      return this;\n    }\n\n    var newChild;\n\n    if (level > 0) {\n      var oldChild = this.array[sizeIndex];\n      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n\n      if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n        return this;\n      }\n    }\n\n    var editable = editableVNode(this, ownerID);\n    editable.array.splice(sizeIndex + 1);\n\n    if (newChild) {\n      editable.array[sizeIndex] = newChild;\n    }\n\n    return editable;\n  };\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n\n      if (to > SIZE) {\n        to = SIZE;\n      }\n\n      return function () {\n        if (from === to) {\n          return DONE;\n        }\n\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : left - offset >> level;\n      var to = (right - offset >> level) + 1;\n\n      if (to > SIZE) {\n        to = SIZE;\n      }\n\n      return function () {\n        do {\n          if (values) {\n            var value = values();\n\n            if (value !== DONE) {\n              return value;\n            }\n\n            values = null;\n          }\n\n          if (from === to) {\n            return DONE;\n          }\n\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function (list) {\n        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n      });\n    }\n\n    index += list._origin;\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = index >>> level & MASK;\n    var nodeHas = node && idx < node.array.length;\n\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n    newNode = editableVNode(node, ownerID);\n\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n\n    if (rawIndex < 1 << list._level + SHIFT) {\n      var node = list._root;\n      var level = list._level;\n\n      while (node && level > 0) {\n        node = node.array[rawIndex >>> level & MASK];\n        level -= SHIFT;\n      }\n\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n\n    if (end !== undefined) {\n      end = end | 0;\n    }\n\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    } // If it's going to end after it starts, it's empty.\n\n\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root; // New origin might need creating a higher root.\n\n    var offsetShift = 0;\n\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity); // New size might need creating a higher root.\n\n    while (newTailOffset >= 1 << newLevel + SHIFT) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    } // Locate or create the new tail.\n\n\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail; // Merge Tail into tree.\n\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = oldTailOffset >>> level & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n\n      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n    } // If the size has been reduced, there's a chance the tail needs to be trimmed.\n\n\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    } // If the new origin is within the tail, then we do not need a root.\n\n\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin); // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0; // Identify the new top root node of the subtree of the old root.\n\n      while (newRoot) {\n        var beginIndex = newOrigin >>> newLevel & MASK;\n\n        if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n          break;\n        }\n\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      } // Trim the new sides of the new root.\n\n\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n\n      iters.push(iter);\n    }\n\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n  }\n\n  createClass(OrderedMap, Map); // @pragma Construction\n\n  function OrderedMap(value) {\n    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  OrderedMap.of = function\n    /*...values*/\n  () {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function () {\n    return this.__toString('OrderedMap {', '}');\n  }; // @pragma Access\n\n\n  OrderedMap.prototype.get = function (k, notSetValue) {\n    var index = this._map.get(k);\n\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  }; // @pragma Modification\n\n\n  OrderedMap.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n\n      this._map.clear();\n\n      this._list.clear();\n\n      return this;\n    }\n\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function () {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._list.__iterate(function (entry) {\n      return entry && fn(entry[1], entry[0], this$0);\n    }, reverse);\n  };\n\n  OrderedMap.prototype.__iterator = function (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    var newList = this._list.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n\n    if (v === NOT_SET) {\n      // removed\n      if (!has) {\n        return omap;\n      }\n\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function (entry, idx) {\n          return entry !== undefined && i !== idx;\n        });\n        newMap = newList.toKeyedSeq().map(function (entry) {\n          return entry[0];\n        }).flip().toMap();\n\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  ToKeyedSequence.prototype.get = function (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function () {\n    var this$0 = this;\n    var reversedSequence = reverseFactory(this, true);\n\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().reverse();\n      };\n    }\n\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function (mapper, context) {\n    var this$0 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().map(mapper, context);\n      };\n    }\n\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var ii;\n    return this._iter.__iterate(this._useKeys ? function (v, k) {\n      return fn(v, k, this$0);\n    } : (ii = reverse ? resolveSize(this) : 0, function (v) {\n      return fn(v, reverse ? --ii : ii++, this$0);\n    }), reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function (type, reverse) {\n    if (this._useKeys) {\n      return this._iter.__iterator(type, reverse);\n    }\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    var ii = reverse ? resolveSize(this) : 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n    });\n  };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n  createClass(ToIndexedSequence, IndexedSeq);\n\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToIndexedSequence.prototype.includes = function (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    return this._iter.__iterate(function (v) {\n      return fn(v, iterations++, this$0);\n    }, reverse);\n  };\n\n  ToIndexedSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n\n  createClass(ToSetSequence, SetSeq);\n\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToSetSequence.prototype.has = function (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$0);\n    }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  createClass(FromEntriesSequence, KeyedSeq);\n\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  FromEntriesSequence.prototype.entrySeq = function () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedIterable = isIterable(entry);\n        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value; // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n\n  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n\n    flipSequence.flip = function () {\n      return iterable;\n    };\n\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n\n      reversedSequence.flip = function () {\n        return iterable.reverse();\n      };\n\n      return reversedSequence;\n    };\n\n    flipSequence.has = function (key) {\n      return iterable.includes(key);\n    };\n\n    flipSequence.includes = function (key) {\n      return iterable.has(key);\n    };\n\n    flipSequence.cacheResult = cacheResultThrough;\n\n    flipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(k, v, this$0) !== false;\n      }, reverse);\n    };\n\n    flipSequence.__iteratorUncached = function (type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n\n        return new Iterator(function () {\n          var step = iterator.next();\n\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n\n          return step;\n        });\n      }\n\n      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n    };\n\n    return flipSequence;\n  }\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n\n    mappedSequence.has = function (key) {\n      return iterable.has(key);\n    };\n\n    mappedSequence.get = function (key, notSetValue) {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);\n    };\n\n    mappedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k, c) {\n        return fn(mapper.call(context, v, k, c), k, this$0) !== false;\n      }, reverse);\n    };\n\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      return new Iterator(function () {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);\n      });\n    };\n\n    return mappedSequence;\n  }\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n\n    reversedSequence.reverse = function () {\n      return iterable;\n    };\n\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n\n        flipSequence.reverse = function () {\n          return iterable.flip();\n        };\n\n        return flipSequence;\n      };\n    }\n\n    reversedSequence.get = function (key, notSetValue) {\n      return iterable.get(useKeys ? key : -1 - key, notSetValue);\n    };\n\n    reversedSequence.has = function (key) {\n      return iterable.has(useKeys ? key : -1 - key);\n    };\n\n    reversedSequence.includes = function (value) {\n      return iterable.includes(value);\n    };\n\n    reversedSequence.cacheResult = cacheResultThrough;\n\n    reversedSequence.__iterate = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(v, k, this$0);\n      }, !reverse);\n    };\n\n    reversedSequence.__iterator = function (type, reverse) {\n      return iterable.__iterator(type, !reverse);\n    };\n\n    return reversedSequence;\n  }\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n\n    if (useKeys) {\n      filterSequence.has = function (key) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n\n      filterSequence.get = function (key, notSetValue) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;\n      };\n    }\n\n    filterSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n\n      return iterations;\n    };\n\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      var iterations = 0;\n      return new Iterator(function () {\n        while (true) {\n          var step = iterator.next();\n\n          if (step.done) {\n            return step;\n          }\n\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    };\n\n    return filterSequence;\n  }\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {\n        return a + 1;\n      });\n    });\n\n    return groups.asImmutable();\n  }\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), function (a) {\n        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n      });\n    });\n\n    var coerce = iterableClass(iterable);\n    return groups.map(function (arr) {\n      return reify(iterable, coerce(arr));\n    });\n  }\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size; // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize); // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    } // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n\n\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable); // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;\n      };\n    }\n\n    sliceSeq.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n\n      if (sliceSize === 0) {\n        return 0;\n      }\n\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k) {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;\n        }\n      });\n\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function (type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      } // Don't bother instantiating parent iterator if taking 0.\n\n\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function () {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n\n        var step = iterator.next();\n\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    };\n\n    return sliceSeq;\n  }\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n\n    takeSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k, c) {\n        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);\n      });\n\n      return iterations;\n    };\n\n    takeSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      var iterating = true;\n      return new Iterator(function () {\n        if (!iterating) {\n          return iteratorDone();\n        }\n\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n\n    return takeSequence;\n  }\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n\n    skipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n\n      var isSkipping = true;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k, c) {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n\n      return iterations;\n    };\n\n    skipSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function () {\n        var step, k, v;\n\n        do {\n          step = iterator.next();\n\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n\n    return skipSequence;\n  }\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function (v) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n\n      return v;\n    }).filter(function (v) {\n      return v.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n\n      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(function (sum, seq) {\n      if (sum !== undefined) {\n        var size = seq.size;\n\n        if (size !== undefined) {\n          return sum + size;\n        }\n      }\n    }, 0);\n    return concatSeq;\n  }\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n\n    flatSequence.__iterateUncached = function (fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n\n      function flatDeep(iter, currentDepth) {\n        var this$0 = this;\n\n        iter.__iterate(function (v, k) {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n\n          return !stopped;\n        }, reverse);\n      }\n\n      flatDeep(iterable, 0);\n      return iterations;\n    };\n\n    flatSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function () {\n        while (iterator) {\n          var step = iterator.next();\n\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n\n          var v = step.value;\n\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n\n        return iteratorDone();\n      });\n    };\n\n    return flatSequence;\n  }\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(function (v, k) {\n      return coerce(mapper.call(context, v, k, iterable));\n    }).flatten(true);\n  }\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 - 1;\n\n    interposedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k) {\n        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;\n      }, reverse);\n\n      return iterations;\n    };\n\n    interposedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n\n      var iterations = 0;\n      var step;\n      return new Iterator(function () {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n\n          if (step.done) {\n            return step;\n          }\n        }\n\n        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n\n    return interposedSequence;\n  }\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(function (v, k) {\n      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];\n    }).toArray();\n    entries.sort(function (a, b) {\n      return comparator(a[3], b[3]) || a[2] - b[2];\n    }).forEach(isKeyedIterable ? function (v, i) {\n      entries[i].length = 2;\n    } : function (v, i) {\n      entries[i] = v[1];\n    });\n    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);\n  }\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n\n    if (mapper) {\n      var entry = iterable.toSeq().map(function (v, k) {\n        return [v, mapper(v, k, iterable)];\n      }).reduce(function (a, b) {\n        return maxCompare(comparator, a[1], b[1]) ? b : a;\n      });\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function (a, b) {\n        return maxCompare(comparator, a, b) ? b : a;\n      });\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a); // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n\n    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n  }\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function (i) {\n      return i.size;\n    }).min(); // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n\n    zipSequence.__iterate = function (fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n\n      var step;\n      var iterations = 0;\n\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n\n      return iterations;\n    };\n\n    zipSequence.__iteratorUncached = function (type, reverse) {\n      var iterators = iters.map(function (i) {\n        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);\n      });\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function () {\n        var steps;\n\n        if (!isDone) {\n          steps = iterators.map(function (i) {\n            return i.next();\n          });\n          isDone = steps.some(function (s) {\n            return s.done;\n          });\n        }\n\n        if (isDone) {\n          return iteratorDone();\n        }\n\n        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n          return s.value;\n        })));\n      });\n    };\n\n    return zipSequence;\n  } // #pragma Helper Functions\n\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n\n      iter = getIterator(Iterable(keyPath));\n    }\n\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n  function Record(defaultValues, name) {\n    var hasInitialized;\n\n    var RecordType = function Record(values) {\n      if (values instanceof RecordType) {\n        return values;\n      }\n\n      if (!(this instanceof RecordType)) {\n        return new RecordType(values);\n      }\n\n      if (!hasInitialized) {\n        hasInitialized = true;\n        var keys = Object.keys(defaultValues);\n        setProps(RecordTypePrototype, keys);\n        RecordTypePrototype.size = keys.length;\n        RecordTypePrototype._name = name;\n        RecordTypePrototype._keys = keys;\n        RecordTypePrototype._defaultValues = defaultValues;\n      }\n\n      this._map = Map(values);\n    };\n\n    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n    RecordTypePrototype.constructor = RecordType;\n    return RecordType;\n  }\n\n  Record.prototype.toString = function () {\n    return this.__toString(recordName(this) + ' {', '}');\n  }; // @pragma Access\n\n\n  Record.prototype.has = function (k) {\n    return this._defaultValues.hasOwnProperty(k);\n  };\n\n  Record.prototype.get = function (k, notSetValue) {\n    if (!this.has(k)) {\n      return notSetValue;\n    }\n\n    var defaultVal = this._defaultValues[k];\n    return this._map ? this._map.get(k, defaultVal) : defaultVal;\n  }; // @pragma Modification\n\n\n  Record.prototype.clear = function () {\n    if (this.__ownerID) {\n      this._map && this._map.clear();\n      return this;\n    }\n\n    var RecordType = this.constructor;\n    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n  };\n\n  Record.prototype.set = function (k, v) {\n    if (!this.has(k)) {\n      throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n    }\n\n    if (this._map && !this._map.has(k)) {\n      var defaultVal = this._defaultValues[k];\n\n      if (v === defaultVal) {\n        return this;\n      }\n    }\n\n    var newMap = this._map && this._map.set(k, v);\n\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.remove = function (k) {\n    if (!this.has(k)) {\n      return this;\n    }\n\n    var newMap = this._map && this._map.remove(k);\n\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Record.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterator(type, reverse);\n  };\n\n  Record.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterate(fn, reverse);\n  };\n\n  Record.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map && this._map.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n\n    return makeRecord(this, newMap, ownerID);\n  };\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {// Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function get() {\n        return this.get(name);\n      },\n      set: function set(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection); // @pragma Construction\n\n  function Set(value) {\n    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  Set.of = function\n    /*...values*/\n  () {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  Set.prototype.toString = function () {\n    return this.__toString('Set {', '}');\n  }; // @pragma Access\n\n\n  Set.prototype.has = function (value) {\n    return this._map.has(value);\n  }; // @pragma Modification\n\n\n  Set.prototype.add = function (value) {\n    return updateSet(this, this._map.set(value, true));\n  };\n\n  Set.prototype.remove = function (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function () {\n    return updateSet(this, this._map.clear());\n  }; // @pragma Composition\n\n\n  Set.prototype.union = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetIterable(iters[ii]).forEach(function (value) {\n          return set.add(value);\n        });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function () {\n    var iters = SLICE$0.call(arguments, 0);\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (!iters.every(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.subtract = function () {\n    var iters = SLICE$0.call(arguments, 0);\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (iters.some(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.merge = function () {\n    return this.union.apply(this, arguments);\n  };\n\n  Set.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.union.apply(this, iters);\n  };\n\n  Set.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._map.__iterate(function (_, k) {\n      return fn(k, k, this$0);\n    }, reverse);\n  };\n\n  Set.prototype.__iterator = function (type, reverse) {\n    return this._map.map(function (_, k) {\n      return k;\n    }).__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n\n    return this.__make(newMap, ownerID);\n  };\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n\n    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set); // @pragma Construction\n\n  function OrderedSet(value) {\n    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  OrderedSet.of = function\n    /*...values*/\n  () {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection); // @pragma Construction\n\n  function Stack(value) {\n    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);\n  }\n\n  Stack.of = function\n    /*...values*/\n  () {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function () {\n    return this.__toString('Stack [', ']');\n  }; // @pragma Access\n\n\n  Stack.prototype.get = function (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n\n    while (head && index--) {\n      head = head.next;\n    }\n\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function () {\n    return this._head && this._head.value;\n  }; // @pragma Modification\n\n\n  Stack.prototype.push = function\n    /*...values*/\n  () {\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments[ii],\n        next: head\n      };\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function (iter) {\n    iter = IndexedIterable(iter);\n\n    if (iter.size === 0) {\n      return this;\n    }\n\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.reverse().forEach(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    });\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.unshift = function\n    /*...values*/\n  () {\n    return this.push.apply(this, arguments);\n  };\n\n  Stack.prototype.unshiftAll = function (iter) {\n    return this.pushAll(iter);\n  };\n\n  Stack.prototype.shift = function () {\n    return this.pop.apply(this, arguments);\n  };\n\n  Stack.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  }; // @pragma Mutability\n\n\n  Stack.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  }; // @pragma Iteration\n\n\n  Stack.prototype.__iterate = function (fn, reverse) {\n    if (reverse) {\n      return this.reverse().__iterate(fn);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n\n      node = node.next;\n    }\n\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function (type, reverse) {\n    if (reverse) {\n      return this.reverse().__iterator(type);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n\n      return iteratorDone();\n    });\n  };\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n  /**\n   * Contributes additional methods to a constructor\n   */\n\n\n  function mixin(ctor, methods) {\n    var keyCopier = function keyCopier(key) {\n      ctor.prototype[key] = methods[key];\n    };\n\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n  mixin(Iterable, {\n    // ### Conversion to other types\n    toArray: function toArray() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n\n      this.valueSeq().__iterate(function (v, i) {\n        array[i] = v;\n      });\n\n      return array;\n    },\n    toIndexedSeq: function toIndexedSeq() {\n      return new ToIndexedSequence(this);\n    },\n    toJS: function toJS() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJS === 'function' ? value.toJS() : value;\n      }).__toJS();\n    },\n    toJSON: function toJSON() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;\n      }).__toJS();\n    },\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, true);\n    },\n    toMap: function toMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n    toObject: function toObject() {\n      assertNotInfinite(this.size);\n      var object = {};\n\n      this.__iterate(function (v, k) {\n        object[k] = v;\n      });\n\n      return object;\n    },\n    toOrderedMap: function toOrderedMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n    toOrderedSet: function toOrderedSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toSet: function toSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toSetSeq: function toSetSeq() {\n      return new ToSetSequence(this);\n    },\n    toSeq: function toSeq() {\n      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n    },\n    toStack: function toStack() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toList: function toList() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n    // ### Common JavaScript methods and properties\n    toString: function toString() {\n      return '[Iterable]';\n    },\n    __toString: function __toString(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n    // ### ES6 Collection methods (ES6 Array and Map)\n    concat: function concat() {\n      var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n    includes: function includes(searchValue) {\n      return this.some(function (value) {\n        return is(value, searchValue);\n      });\n    },\n    entries: function entries() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n    every: function every(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n\n      this.__iterate(function (v, k, c) {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n\n      return returnValue;\n    },\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n    find: function find(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n    forEach: function forEach(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n    join: function join(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n\n      this.__iterate(function (v) {\n        isFirst ? isFirst = false : joined += separator;\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n\n      return joined;\n    },\n    keys: function keys() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n    map: function map(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n    reduce: function reduce(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n\n      this.__iterate(function (v, k, c) {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n\n      return reduction;\n    },\n    reduceRight: function reduceRight(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, true));\n    },\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n    some: function some(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n    sort: function sort(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n    values: function values() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n    // ### More sequential methods\n    butLast: function butLast() {\n      return this.slice(0, -1);\n    },\n    isEmpty: function isEmpty() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function () {\n        return true;\n      });\n    },\n    count: function count(predicate, context) {\n      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n    },\n    countBy: function countBy(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n    equals: function equals(other) {\n      return deepEqual(this, other);\n    },\n    entrySeq: function entrySeq() {\n      var iterable = this;\n\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n\n      entriesSequence.fromEntrySeq = function () {\n        return iterable.toSeq();\n      };\n\n      return entriesSequence;\n    },\n    filterNot: function filterNot(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n    findEntry: function findEntry(predicate, context, notSetValue) {\n      var found = notSetValue;\n\n      this.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n\n      return found;\n    },\n    findKey: function findKey(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n    findLast: function findLast(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n    findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n    findLastKey: function findLastKey(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n    first: function first() {\n      return this.find(returnTrue);\n    },\n    flatMap: function flatMap(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n    fromEntrySeq: function fromEntrySeq() {\n      return new FromEntriesSequence(this);\n    },\n    get: function get(searchKey, notSetValue) {\n      return this.find(function (_, key) {\n        return is(key, searchKey);\n      }, undefined, notSetValue);\n    },\n    getIn: function getIn(searchKeyPath, notSetValue) {\n      var nested = this; // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n\n      var iter = forceIterator(searchKeyPath);\n      var step;\n\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n\n      return nested;\n    },\n    groupBy: function groupBy(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n    has: function has(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n    hasIn: function hasIn(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n    isSubset: function isSubset(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function (value) {\n        return iter.includes(value);\n      });\n    },\n    isSuperset: function isSuperset(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n    keyOf: function keyOf(searchValue) {\n      return this.findKey(function (value) {\n        return is(value, searchValue);\n      });\n    },\n    keySeq: function keySeq() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n    last: function last() {\n      return this.toSeq().reverse().first();\n    },\n    lastKeyOf: function lastKeyOf(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n    max: function max(comparator) {\n      return maxFactory(this, comparator);\n    },\n    maxBy: function maxBy(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n    min: function min(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n    minBy: function minBy(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n    rest: function rest() {\n      return this.slice(1);\n    },\n    skip: function skip(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n    skipLast: function skipLast(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n    skipUntil: function skipUntil(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n    sortBy: function sortBy(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n    take: function take(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n    takeLast: function takeLast(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n    takeWhile: function takeWhile(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n    takeUntil: function takeUntil(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n    valueSeq: function valueSeq() {\n      return this.toIndexedSeq();\n    },\n    // ### Hashable Object\n    hashCode: function hashCode() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    } // ### Internal\n    // abstract __iterate(fn, reverse)\n    // abstract __iterator(type, reverse)\n\n  }); // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n\n  IterablePrototype.inspect = IterablePrototype.toSource = function () {\n    return this.toString();\n  };\n\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n  mixin(KeyedIterable, {\n    // ### More sequential methods\n    flip: function flip() {\n      return reify(this, flipFactory(this));\n    },\n    mapEntries: function mapEntries(mapper, context) {\n      var this$0 = this;\n      var iterations = 0;\n      return reify(this, this.toSeq().map(function (v, k) {\n        return mapper.call(context, [k, v], iterations++, this$0);\n      }).fromEntrySeq());\n    },\n    mapKeys: function mapKeys(mapper, context) {\n      var this$0 = this;\n      return reify(this, this.toSeq().flip().map(function (k, v) {\n        return mapper.call(context, k, v, this$0);\n      }).flip());\n    }\n  });\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n\n  KeyedIterablePrototype.__toStringMapper = function (v, k) {\n    return JSON.stringify(k) + ': ' + quoteString(v);\n  };\n\n  mixin(IndexedIterable, {\n    // ### Conversion to other types\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, false);\n    },\n    // ### ES6 Collection methods (ES6 Array and Map)\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n    findIndex: function findIndex(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n    indexOf: function indexOf(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n    lastIndexOf: function lastIndexOf(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, false));\n    },\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n    splice: function splice(index, removeNum\n    /*, ...values*/\n    ) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n\n      if (numArgs === 0 || numArgs === 2 && !removeNum) {\n        return this;\n      } // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n\n\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n    },\n    // ### More collection methods\n    findLastIndex: function findLastIndex(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n    first: function first() {\n      return this.get(0);\n    },\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n    get: function get(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {\n        return key === index;\n      }, undefined, notSetValue);\n    },\n    has: function has(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n    },\n    interpose: function interpose(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n    interleave: function\n      /*...iterables*/\n    interleave() {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n\n      return reify(this, interleaved);\n    },\n    keySeq: function keySeq() {\n      return Range(0, this.size);\n    },\n    last: function last() {\n      return this.get(-1);\n    },\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n    zip: function\n      /*, ...iterables */\n    zip() {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n    zipWith: function zipWith(zipper\n    /*, ...iterables */\n    ) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n  });\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n  mixin(SetIterable, {\n    // ### ES6 Collection methods (ES6 Array and Map)\n    get: function get(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n    includes: function includes(value) {\n      return this.has(value);\n    },\n    // ### More sequential methods\n    keySeq: function keySeq() {\n      return this.valueSeq();\n    }\n  });\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes; // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype); // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }\n\n  function neg(predicate) {\n    return function () {\n      return -predicate.apply(this, arguments);\n    };\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n\n    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {\n      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n    } : function (v, k) {\n      h = h + hashMerge(hash(v), hash(k)) | 0;\n    } : ordered ? function (v) {\n      h = 31 * h + hash(v) | 0;\n    } : function (v) {\n      h = h + hash(v) | 0;\n    });\n\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n    Iterable: Iterable,\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n    is: is,\n    fromJS: fromJS\n  };\n  return Immutable;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","Immutable","SLICE$0","Array","prototype","slice","createClass","ctor","superClass","Object","create","constructor","Iterable","value","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Keyed","Indexed","Set","DELETE","SHIFT","SIZE","MASK","NOT_SET","CHANGE_LENGTH","DID_ALTER","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","ii","ensureSize","iter","size","undefined","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","toString","KEYS","VALUES","ENTRIES","inspect","toSource","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isArrayLike","emptySequence","toSeq","seqFromValue","of","arguments","__toString","cacheResult","_cache","__iterateUncached","entrySeq","toArray","fn","reverse","seqIterate","__iterator","seqIterator","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","indexedSeqFromValue","toIndexedSeq","toSetSeq","isSeq","IS_SEQ_SENTINEL","ArraySeq","array","_array","get","notSetValue","has","maxIndex","ObjectSeq","object","keys","_object","_keys","key","hasOwnProperty","IterableSeq","_iterable","iterations","step","__iteratorUncached","IteratorSeq","_iterator","_iteratorCache","cache","val","maybeSeq","EMPTY_SEQ","seq","isArray","TypeError","maybeIndexedSeqFromValue","useKeys","entry","fromJS","json","converter","fromJSWith","fromJSDefault","parentJSON","map","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","_","allEqual","bSize","Repeat","times","_value","Infinity","EMPTY_REPEAT","includes","searchValue","indexOf","lastIndexOf","this$0","other","invariant","condition","error","Error","Range","start","abs","_start","_end","_step","ceil","EMPTY_RANGE","possibleIndex","floor","offsetValue","Collection","KeyedCollection","IndexedCollection","SetCollection","imul","c","d","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","defineProperty","apply","nodeType","e","node","uniqueID","documentElement","WeakMap","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","keyValues","i","_root","updateMap","setIn","keyPath","updateIn","remove","deleteIn","update","updater","updatedValue","updateInDeepMap","forceIterator","clear","__ownerID","__altered","merge","mergeIntoMapWith","mergeWith","merger","iters","mergeIn","m","mergeDeep","deepMerger","mergeDeepWith","deepMergerWith","mergeDeepIn","sort","comparator","OrderedMap","sortFactory","sortBy","mapper","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","MapIterator","iterate","ownerID","makeMap","maybeMap","IS_MAP_SENTINEL","MapPrototype","removeIn","ArrayMapNode","shift","keyHash","didChangeSize","didAlter","removed","idx","exists","MAX_ARRAY_MAP_SIZE","createNodes","isEditable","newEntries","pop","push","BitmapIndexedNode","bitmap","nodes","bit","popCount","keyHashFrag","newNode","updateNode","MAX_BITMAP_INDEXED_SIZE","expandNodes","isLeafNode","newBitmap","newNodes","spliceOut","spliceIn","HashArrayMapNode","count","newCount","MIN_HASH_ARRAY_MAP_SIZE","packNodes","HashCollisionNode","mergeIntoNode","ValueNode","keyMatch","_type","_reverse","_stack","mapIteratorFrame","stack","mapIteratorValue","subNode","__prev","prev","root","EMPTY_MAP","newRoot","newSize","idx1","idx2","excluding","packedII","packedNodes","including","expandedNodes","iterables","mergeIntoCollectionWith","existing","nextValue","collection","filter","x","mergeIntoMap","keyPathIter","isNotSet","existingValue","newValue","nextExisting","nextUpdated","canEdit","newArray","newLen","after","List","empty","emptyList","isList","makeList","VNode","list","setSize","_origin","listNodeFor","updateList","splice","insert","_capacity","_level","_tail","values","oldSize","setListBounds","unshift","mergeIntoListWith","iterateList","DONE","maybeList","IS_LIST_SENTINEL","ListPrototype","removeBefore","level","originIndex","removingFirst","newChild","oldChild","editable","editableVNode","removeAfter","sizeIndex","left","right","tailPos","getTailOffset","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","from","to","origin","capacity","EMPTY_LIST","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","maxSize","emptyOrderedMap","isOrderedMap","_map","_list","updateOrderedMap","newMap","newList","makeOrderedMap","maybeOrderedMap","omap","EMPTY_ORDERED_MAP","flip","ToKeyedSequence","indexed","_iter","_useKeys","valueSeq","reversedSequence","reverseFactory","context","mappedSequence","mapFactory","resolveSize","ToIndexedSequence","ToSetSequence","FromEntriesSequence","validateEntry","indexedIterable","cacheResultThrough","flipFactory","flipSequence","makeSequence","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","resolvedSize","sliceSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","flatMapFactory","interposeFactory","separator","interposedSequence","defaultComparator","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","recordName","defaultVal","_empty","makeRecord","likeRecord","record","getPrototypeOf","names","setProp","bind","emptySet","isSet","add","fromKeys","keySeq","updateSet","union","intersect","originalSet","subtract","OrderedSet","__make","maybeSet","IS_SET_SENTINEL","SetPrototype","__empty","makeSet","EMPTY_SET","emptyOrderedSet","isOrderedSet","maybeOrderedSet","OrderedSetPrototype","makeOrderedSet","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","head","_head","peek","makeStack","pushAll","maybeStack","IS_STACK_SENTINEL","StackPrototype","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","not","butLast","isEmpty","countBy","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","hashIterable","IterablePrototype","quoteString","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","JSON","stringify","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","defaultZipper","zipWith","String","ordered","keyed","hashMerge","murmurHashOfSize"],"sources":["/Users/macuser/Documents/amccar15.github.io/node_modules/immutable/dist/immutable.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32âˆ’1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));"],"mappings":"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"},"metadata":{},"sourceType":"script"}