{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from '../firebase-config';\nimport { collection, doc, getDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThePost(_ref) {\n  _s();\n\n  let {\n    isAuth\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const postsCollectionRef = collection(db, \"posts\");\n  const [docDetails, setDocDetails] = useState([]);\n  const [seeAuthorName, setAuthorName] = useState([]);\n  const [seeAuthorID, setAuthorID] = useState([]);\n  const storage = getStorage();\n  const metadata = {\n    contentType: 'image/jpeg'\n  };\n  const storageRef = ref(storage, 'images/');\n  useEffect(() => {\n    const getPost = async postID => {\n      const postDoc = doc(postsCollectionRef, postID);\n      const docSnap = await getDoc(postDoc);\n      setDocDetails(docSnap.data());\n\n      if (docSnap.exists()) {\n        setAuthorName(docSnap.data().author.name);\n        setAuthorID(docSnap.data().author.id);\n      } else {\n        console.log(\"Error\");\n      }\n    };\n\n    getPost(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thePost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postHeader\",\n      children: [isAuth && seeAuthorID === auth.currentUser.uid && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/x-png, image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", docDetails.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postTextContainer\",\n      children: [\" \", docDetails.postText, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"@\", seeAuthorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThePost, \"/XJ1W2vbM3Bo/SCMf4H1piYt5Q4=\", false, function () {\n  return [useParams];\n});\n\n_c = ThePost;\nexport default ThePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThePost\");","map":{"version":3,"names":["useParams","React","useEffect","useState","auth","db","collection","doc","getDoc","getStorage","ref","uploadBytesResumable","getDownloadURL","ThePost","isAuth","id","postsCollectionRef","docDetails","setDocDetails","seeAuthorName","setAuthorName","seeAuthorID","setAuthorID","storage","metadata","contentType","storageRef","getPost","postID","postDoc","docSnap","data","exists","author","name","console","log","currentUser","uid","title","postText"],"sources":["/Users/macuser/Documents/amccar15.github.io/src/pages/ThePost.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from '../firebase-config';\nimport { collection, doc, getDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\n\nfunction ThePost({ isAuth }) {\n\n    const { id } = useParams();\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const [docDetails, setDocDetails] = useState([]);\n\n    const [seeAuthorName, setAuthorName] = useState([]);\n\n    const [seeAuthorID, setAuthorID] = useState([]);\n\n    const storage = getStorage();\n\n    const metadata = {\n        contentType: 'image/jpeg',\n    };\n\n    const storageRef = ref(storage, 'images/')\n\n    useEffect(() => {\n        const getPost = async (postID) => {\n            const postDoc = doc(postsCollectionRef, postID);\n            const docSnap = await getDoc(postDoc);\n            setDocDetails(docSnap.data());\n    \n            if(docSnap.exists()) {\n                setAuthorName(docSnap.data().author.name);\n                setAuthorID(docSnap.data().author.id);\n            } else {\n                console.log(\"Error\");\n            }\n        };\n        getPost(id);\n    }, []);\n\n    return (\n        <div className=\"thePost\"> \n            <div className=\"postHeader\">\n                {isAuth && seeAuthorID === auth.currentUser.uid && (\n                    <div>\n                        <input type=\"file\" accept=\"image/x-png, image/jpeg\"/>\n                        <button>\n                            Add Image\n                        </button>\n                    </div>\n                )}\n                <h1> {docDetails.title} </h1>\n            </div>\n            <hr />\n            <div className=\"postTextContainer\"> {docDetails.postText} </div>\n                <h3> \n                    @{seeAuthorName}\n                </h3>\n            </div>\n    );\n}\n\nexport default ThePost;"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,oBAAzB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,oBAA1B,EAAgDC,cAAhD,QAAsE,kBAAtE;;;AAEA,SAASC,OAAT,OAA6B;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAEzB,MAAM;IAAEC;EAAF,IAASf,SAAS,EAAxB;EAEA,MAAMgB,kBAAkB,GAAGV,UAAU,CAACD,EAAD,EAAK,OAAL,CAArC;EAEA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EAEA,MAAM,CAACgB,aAAD,EAAgBC,aAAhB,IAAiCjB,QAAQ,CAAC,EAAD,CAA/C;EAEA,MAAM,CAACkB,WAAD,EAAcC,WAAd,IAA6BnB,QAAQ,CAAC,EAAD,CAA3C;EAEA,MAAMoB,OAAO,GAAGd,UAAU,EAA1B;EAEA,MAAMe,QAAQ,GAAG;IACbC,WAAW,EAAE;EADA,CAAjB;EAIA,MAAMC,UAAU,GAAGhB,GAAG,CAACa,OAAD,EAAU,SAAV,CAAtB;EAEArB,SAAS,CAAC,MAAM;IACZ,MAAMyB,OAAO,GAAG,MAAOC,MAAP,IAAkB;MAC9B,MAAMC,OAAO,GAAGtB,GAAG,CAACS,kBAAD,EAAqBY,MAArB,CAAnB;MACA,MAAME,OAAO,GAAG,MAAMtB,MAAM,CAACqB,OAAD,CAA5B;MACAX,aAAa,CAACY,OAAO,CAACC,IAAR,EAAD,CAAb;;MAEA,IAAGD,OAAO,CAACE,MAAR,EAAH,EAAqB;QACjBZ,aAAa,CAACU,OAAO,CAACC,IAAR,GAAeE,MAAf,CAAsBC,IAAvB,CAAb;QACAZ,WAAW,CAACQ,OAAO,CAACC,IAAR,GAAeE,MAAf,CAAsBlB,EAAvB,CAAX;MACH,CAHD,MAGO;QACHoB,OAAO,CAACC,GAAR,CAAY,OAAZ;MACH;IACJ,CAXD;;IAYAT,OAAO,CAACZ,EAAD,CAAP;EACH,CAdQ,EAcN,EAdM,CAAT;EAgBA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI;MAAK,SAAS,EAAC,YAAf;MAAA,WACKD,MAAM,IAAIO,WAAW,KAAKjB,IAAI,CAACiC,WAAL,CAAiBC,GAA3C,iBACG;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,MAAM,EAAC;QAA1B;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFR,eASI;QAAA,gBAAMrB,UAAU,CAACsB,KAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAYI;MAAA;MAAA;MAAA;IAAA,QAZJ,eAaI;MAAK,SAAS,EAAC,mBAAf;MAAA,gBAAqCtB,UAAU,CAACuB,QAAhD;IAAA;MAAA;MAAA;MAAA;IAAA,QAbJ,eAcQ;MAAA,gBACMrB,aADN;IAAA;MAAA;MAAA;MAAA;IAAA,QAdR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH;;GAxDQN,O;UAEUb,S;;;KAFVa,O;AA0DT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}