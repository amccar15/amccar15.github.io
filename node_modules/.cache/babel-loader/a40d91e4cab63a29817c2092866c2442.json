{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { addDoc, collection } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { useNavigate } from 'react-router-dom';\nimport { getStorage, ref, uploadString } from 'firebase/storage';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { upload } from \"@testing-library/user-event/dist/upload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost(_ref) {\n  _s();\n\n  let {\n    isAuth\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  const postsCollectionRef = collection(db, \"posts\");\n  let navigate = useNavigate();\n\n  const createPost = async () => {\n    await addDoc(postsCollectionRef, {\n      title,\n      postText,\n      author: {\n        name: auth.currentUser.displayName,\n        id: auth.currentUser.uid\n      }\n    });\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (!isAuth) {\n      navigate(\"login\");\n    }\n  }, []);\n  const storage = getStorage();\n  const [image, setImage] = useState('');\n  const storageRef = ref(storage, 'image/${image.jpg}');\n\n  const upload = () => {\n    uploadString(storageRef, image).then(snapshot => {\n      console.log(\"Uploaded file\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cpContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Create a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Title...\",\n          onChange: event => {\n            setTitle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Post: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Post...\",\n          onChange: event => {\n            setPostText(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: event => {\n            setImage(event.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: upload,\n          children: \" upload image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \" Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"F2cOApNTPYE1asxD/xLUFZGHmZ0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","addDoc","collection","db","auth","useNavigate","getStorage","ref","uploadString","upload","CreatePost","isAuth","title","setTitle","postText","setPostText","postsCollectionRef","navigate","createPost","author","name","currentUser","displayName","id","uid","storage","image","setImage","storageRef","then","snapshot","console","log","event","target","value","files"],"sources":["/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {addDoc, collection} from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport {useNavigate} from 'react-router-dom';\nimport { getStorage, ref, uploadString } from 'firebase/storage'\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { upload } from \"@testing-library/user-event/dist/upload\";\n\nfunction CreatePost({ isAuth }) {\n\n    const [title, setTitle] = useState(\"\");\n    const [postText, setPostText] = useState(\"\");\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    let navigate = useNavigate();\n\n    const createPost = async () => {\n        await addDoc(postsCollectionRef, {\n            title, \n            postText, \n            author: { name: auth.currentUser.displayName, id: auth.currentUser.uid }\n        });\n        navigate(\"/\");\n    };\n\n    useEffect(() => {\n        if(!isAuth) {\n            navigate(\"login\");\n        }\n    }, []);\n\n    const storage = getStorage();\n    const [image, setImage] = useState('');\n\n    const storageRef = ref(storage, 'image/${image.jpg}');\n\n    const upload = () => {\n        uploadString(storageRef, image).then((snapshot) => {\n            console.log(\"Uploaded file\");\n        });\n    }\n\n    return (\n        <div className=\"createPostPage\"> \n            <div className=\"cpContainer\">\n                <h1> Create a Post</h1>\n                <div className=\"inputGp\">\n                    <label> Title: </label>\n                    <input placeholder=\"Title...\" \n                        onChange={(event) => {\n                            setTitle(event.target.value)\n                            }\n                        }\n                    />\n                </div>\n                <div className=\"inputGp\">\n                    <label> Post: </label>\n                    <textarea placeholder=\"Post...\"\n                        onChange={(event) => {\n                            setPostText(event.target.value)\n                                }\n                        }\n                    />\n                </div>\n                <div>\n                    <input type=\"file\" \n                        onChange={(event) => {\n                            setImage(event.target.files[0])\n                            }\n                        } \n                    />\n                    <button onClick={upload}> upload image</button>\n                </div>\n                <button onClick={createPost}> Submit Post</button>\n            </div>\n        </div>\n    );\n}\n\nexport default CreatePost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}