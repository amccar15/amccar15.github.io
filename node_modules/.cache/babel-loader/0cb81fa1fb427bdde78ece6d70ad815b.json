{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { addDoc, collection } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { useNavigate } from 'react-router-dom';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from 'draftjs-to-html';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { convertToRaw } from \"draft-js\";\nimport { convertFromRaw } from \"draft-js\";\nimport { convertFromHTML } from \"draft-js\";\nimport { ContentState } from \"draft-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost(_ref) {\n  _s();\n\n  let {\n    isAuth\n  } = _ref;\n  const [title, setTitle] = useState(\"\"); //rich text editor state\n\n  const [editorState, setEditorState] = useState({\n    message: \"Enter your post here!\",\n    rawMessage: ''\n  });\n  const [postText, setPostText] = useState(\"\"); //firebase collection \n\n  const postsCollectionRef = collection(db, \"posts\"); //navigate function to navigate back to root file\n\n  let navigate = useNavigate(); //sending data to firebase\n\n  const createPost = async () => {\n    await addDoc(postsCollectionRef, {\n      title,\n      postText,\n      author: {\n        name: auth.currentUser.displayName,\n        id: auth.currentUser.uid\n      }\n    });\n    navigate(\"/\");\n  }; //checking if user is logged in\n\n\n  useEffect(() => {\n    if (!isAuth) {\n      navigate(\"login\");\n    }\n  }, []); //converting to raw html\n\n  const onEditorStateChange = editorState => {\n    setEditorState({\n      editorState,\n      rawMessage: draftToHtml(convertToRaw(editorState.getCurrentContent()))\n    });\n  }; //handling the message from rich text editor\n\n\n  const handleEditorStateMessage = () => {\n    setEditorState({\n      message: editorState.rawMessage\n    });\n    console.log(editorState.rawMessage);\n    console.log(setPostText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cpContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Create a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Title...\",\n          onChange: event => {\n            setTitle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        initialEditorState: editorState,\n        onEditorStateChange: onEditorStateChange,\n        toolbarClassName: \"toolbarClassName\",\n        wrapperClassName: \"wrapperClassName\",\n        editorClassName: \"editorClassName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleEditorStateMessage();\n        },\n        children: \" Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"yRS7k037XfB5dho++kOHKHpNYQs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","addDoc","collection","db","auth","useNavigate","Editor","draftToHtml","convertToRaw","convertFromRaw","convertFromHTML","ContentState","CreatePost","isAuth","title","setTitle","editorState","setEditorState","message","rawMessage","postText","setPostText","postsCollectionRef","navigate","createPost","author","name","currentUser","displayName","id","uid","onEditorStateChange","getCurrentContent","handleEditorStateMessage","console","log","event","target","value"],"sources":["/Users/macuser/Documents/amccar15.github.io/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {addDoc, collection} from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport {useNavigate} from 'react-router-dom';\n\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from 'draftjs-to-html'; \nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { convertToRaw } from \"draft-js\";\nimport { convertFromRaw } from \"draft-js\";\nimport { convertFromHTML } from \"draft-js\";\nimport { ContentState } from \"draft-js\";\n\nfunction CreatePost({ isAuth }) {\n\n    const [title, setTitle] = useState(\"\");\n\n    //rich text editor state\n    const [editorState, setEditorState] = useState(\n        {\n            message: \"Enter your post here!\",\n            rawMessage: '',\n        },\n    );\n\n    const [postText, setPostText] = useState(\"\");\n\n    //firebase collection \n    const postsCollectionRef = collection(db, \"posts\");\n\n    //navigate function to navigate back to root file\n    let navigate = useNavigate();\n\n    //sending data to firebase\n    const createPost = async () => {\n        await addDoc(postsCollectionRef, {\n            title, \n            postText, \n            author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\n        });\n        navigate(\"/\");\n    };\n\n    //checking if user is logged in\n    useEffect(() => {\n        if(!isAuth) {\n            navigate(\"login\");\n        }\n    }, []);\n\n    //converting to raw html\n    const onEditorStateChange = (editorState) => {\n        setEditorState({\n            editorState,\n            rawMessage: draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        })\n    }\n    \n    //handling the message from rich text editor\n    const handleEditorStateMessage = () => {\n        setEditorState({\n            message: editorState.rawMessage\n        })\n        console.log(editorState.rawMessage);\n        console.log(setPostText);\n    }\n\n    return (\n        <div className=\"createPostPage\"> \n            <div className=\"cpContainer\">\n                <h1> Create a Post</h1>\n                <div className=\"inputGp\">\n                    <label> Title: </label>\n                    <input placeholder=\"Title...\" \n                        onChange={(event) => {\n                            setTitle(event.target.value)\n                            }\n                        }\n                    />\n                </div>\n                <br></br>\n                <Editor \n                    initialEditorState={editorState}\n                    onEditorStateChange={onEditorStateChange}\n                    toolbarClassName=\"toolbarClassName\"\n                    wrapperClassName=\"wrapperClassName\"\n                    editorClassName=\"editorClassName\" \n                />\n                <button onClick={() => {handleEditorStateMessage();}}> Submit Post</button>\n            </div>\n        </div>\n    );\n}\n\nexport default CreatePost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}