{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/amccar15.github.io/src/pages/showSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, getDocs, doc, query, where } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowSearch() {\n  _s();\n\n  const {\n    type,\n    search\n  } = useParams();\n  const postsCollectionRef = collection(db, \"posts\");\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const q = query(postsCollectionRef, where(type, '==', search));\n      const docData = await getDocs(q);\n      setPost(docData.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getPosts();\n    console.log(post);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowSearch, \"NQRv+UE4cjC1DKP8mYdAywXxoUo=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowSearch;\nexport default ShowSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSearch\");","map":{"version":3,"names":["React","useEffect","useParams","collection","getDocs","doc","query","where","ShowSearch","type","search","postsCollectionRef","db","post","setPost","useState","getPosts","q","docData","docs","map","data","id","console","log"],"sources":["/Users/macuser/Documents/amccar15.github.io/src/pages/showSearch.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {collection, getDocs, doc, query, where} from 'firebase/firestore';\n\nfunction ShowSearch() {\n\n    const {type, search} = useParams();\n\n    const postsCollectionRef = collection(db, \"posts\");\n\n    const [post, setPost] = useState([]);\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const q = query(postsCollectionRef, where(type, '==', search));\n            const docData = await getDocs(q);\n            setPost(docData.docs.map((doc) => (\n                    {...doc.data(), id: doc.id}\n                )\n            ));\n        }\n        getPosts();\n        console.log(post);\n    }, []);\n\n    return(\n        <div>\n            <h1>show</h1>\n        </div>\n    );\n}\n\nexport default ShowSearch;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,UAAR,EAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAqD,oBAArD;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EAElB,MAAM;IAACC,IAAD;IAAOC;EAAP,IAAiBR,SAAS,EAAhC;EAEA,MAAMS,kBAAkB,GAAGR,UAAU,CAACS,EAAD,EAAK,OAAL,CAArC;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;EAEAd,SAAS,CAAC,MAAM;IACZ,MAAMe,QAAQ,GAAG,YAAY;MACzB,MAAMC,CAAC,GAAGX,KAAK,CAACK,kBAAD,EAAqBJ,KAAK,CAACE,IAAD,EAAO,IAAP,EAAaC,MAAb,CAA1B,CAAf;MACA,MAAMQ,OAAO,GAAG,MAAMd,OAAO,CAACa,CAAD,CAA7B;MACAH,OAAO,CAACI,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAkBf,GAAD,KACjB,EAAC,GAAGA,GAAG,CAACgB,IAAJ,EAAJ;QAAgBC,EAAE,EAAEjB,GAAG,CAACiB;MAAxB,CADiB,CAAjB,CAAD,CAAP;IAIH,CAPD;;IAQAN,QAAQ;IACRO,OAAO,CAACC,GAAR,CAAYX,IAAZ;EACH,CAXQ,EAWN,EAXM,CAAT;EAaA,oBACI;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GA1BQL,U;UAEkBN,S;;;KAFlBM,U;AA4BT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}